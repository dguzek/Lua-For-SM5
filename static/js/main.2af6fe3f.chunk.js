(this.webpackJsonplua_for_sm5=this.webpackJsonplua_for_sm5||[]).push([[0],{232:function(e,t,a){"use strict";a.r(t);a(29);var n=a(8),l=a.n(n),r=(a(30),a(0)),o=a.n(r),s=a(24),i=a.n(s),c=a(2),m=a(3),u=a(5),h=a(4),d=a(9),p=a(6),f=a(15),E=(a(35),a(1)),b=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("nav",{id:"topbar",className:"navbar navbar-expand-sm navbar-dark bg-dark fixed-top"},o.a.createElement("img",{src:"/Lua-For-SM5/img/stepmania.png",className:"navbar-brand",alt:"",width:"25"}),o.a.createElement("span",{className:"navbar-brand"},"Lua for SM5"),o.a.createElement("button",{className:"navbar-toggler",type:"button","data-toggle":"collapse","data-target":"#navbarNav","aria-controls":"navbarNav","aria-expanded":"false","aria-label":"Toggle navigation"},o.a.createElement("span",{className:"navbar-toggler-icon"})),o.a.createElement("div",{className:"collapse navbar-collapse",id:"navbarNav"},o.a.createElement("ul",{className:"navbar-nav"},o.a.createElement("li",{className:"nav-item"},o.a.createElement(E.c,{className:"nav-link",exact:!0,to:"/"},"Home")),o.a.createElement("li",{className:"nav-item"},o.a.createElement(E.c,{className:"nav-link",to:"/LuaAPI"},"Lua API")),o.a.createElement("li",{className:"nav-item"},o.a.createElement(E.c,{className:"nav-link",to:"/resources"},"Other Resources")))))}}]),t}(r.Component),g=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"componentDidMount",value:function(){[1,2,3,4,5].forEach((function(e){var t=l()("#collapse-"+e);t.find("li a").each((function(a,n){l()(n).hasClass("active")&&(t.addClass("show"),l()("#heading-"+e+" h5 a").removeClass("collapsed"))}))}))}},{key:"render",value:function(){return o.a.createElement("div",{id:"GuidesSidebar"},o.a.createElement("div",null,o.a.createElement("div",{id:"heading-1"},o.a.createElement("h5",null,o.a.createElement(E.c,{to:"#",className:"collapsed","data-toggle":"collapse","data-target":"#collapse-1","aria-expanded":"false","aria-controls":"collapse-1"},"Introduction"))),o.a.createElement("div",{id:"collapse-1",className:"collapse","aria-labelledby":"heading-1","data-parent":"#sidebar"},o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement(E.c,{to:"/foreword"},"What Are Actors?")),o.a.createElement("li",null,o.a.createElement(E.c,{to:"/lua"},"Lua changes from SM3.95")),o.a.createElement("li",null,o.a.createElement(E.c,{to:"/Supported-File-Extensions"},"Supported File Extensions")),o.a.createElement("li",null,o.a.createElement(E.c,{to:"/Mod-Chart-Setup"},'Setting Up a "Mod" Chart'))))),o.a.createElement("div",null,o.a.createElement("div",{id:"heading-2"},o.a.createElement("h5",null,o.a.createElement(E.c,{to:"#",className:"collapsed","data-toggle":"collapse","data-target":"#collapse-2","aria-expanded":"false","aria-controls":"collapse-2"},"Actors"))),o.a.createElement("div",{id:"collapse-2",className:"collapse","aria-labelledby":"heading-2","data-parent":"#sidebar"},o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement(E.c,{to:"/Def.Quad"},"Quad")),o.a.createElement("li",null,o.a.createElement(E.c,{to:"/Def.BitmapText"},"BitmapText")),o.a.createElement("li",null,o.a.createElement(E.c,{to:"/Def.Sprite"},"Sprite")),o.a.createElement("li",null,o.a.createElement(E.c,{to:"/Def.Actor"},"Actor")),o.a.createElement("li",null,o.a.createElement(E.c,{to:"/LoadActor"},"LoadActor()")),o.a.createElement("li",null,o.a.createElement(E.c,{to:"/Def.Sound"},"Sound")),o.a.createElement("li",null,o.a.createElement(E.c,{to:"/Def.Model"},"Model")),o.a.createElement("li",null,o.a.createElement(E.c,{to:"/Def.ActorMultiVertex"},"ActorMultiVertex")),o.a.createElement("li",null,o.a.createElement(E.c,{to:"/Def.ActorFrameTexture"},"ActorFrameTexture"))))),o.a.createElement("div",null,o.a.createElement("div",{id:"heading-3"},o.a.createElement("h5",null,o.a.createElement(E.c,{to:"#",className:"collapsed","data-toggle":"collapse","data-target":"#collapse-3","aria-expanded":"false","aria-controls":"collapse-3"},"Singletons"))),o.a.createElement("div",{id:"collapse-3",className:"collapse","aria-labelledby":"heading-3","data-parent":"#sidebar"},o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement(E.c,{to:"/SCREENMAN"},"SCREENMAN")),o.a.createElement("li",null,o.a.createElement(E.c,{to:"/SOUND"},"SOUND"))))),o.a.createElement("div",null,o.a.createElement("div",{id:"heading-4"},o.a.createElement("h5",null,o.a.createElement(E.c,{to:"#",className:"collapsed","data-toggle":"collapse","data-target":"#collapse-4","aria-expanded":"false","aria-controls":"collapse-4"},"Best Practices"))),o.a.createElement("div",{id:"collapse-4",className:"collapse","aria-labelledby":"heading-4","data-parent":"#sidebar"},o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement(E.c,{to:"/Debugging"},"Debugging")),o.a.createElement("li",null,o.a.createElement(E.c,{to:"/Command-Chaining"},"Command Chaining"))))),o.a.createElement("div",null,o.a.createElement("div",{id:"heading-5"},o.a.createElement("h5",null,o.a.createElement(E.c,{to:"#",className:"collapsed","data-toggle":"collapse","data-target":"#collapse-5","aria-expanded":"false","aria-controls":"collapse-5"},"Examples"))),o.a.createElement("div",{id:"collapse-5",className:"collapse","aria-labelledby":"heading-5","data-parent":"#sidebar"},o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement(E.c,{to:"/Arbitrary-Input"},"Handling Arbitrary Input")),o.a.createElement("li",null,o.a.createElement(E.c,{to:"/Simple-Tweens"},"Simple Tweens"))))))}}]),t}(r.Component),y=function(e){function t(e){var a;return Object(c.a)(this,t),(a=Object(u.a)(this,Object(h.a)(t).call(this,e))).handleFilter=a.handleFilter.bind(Object(d.a)(a)),a.typingTimer=null,a.doneTypingInterval=200,a}return Object(p.a)(t,e),Object(m.a)(t,[{key:"handleFilter",value:function(e){var t=e.target.value,a=this;clearTimeout(this.typingTimer),this.typingTimer=setTimeout((function(){a.props.onFilterChange(t.toUpperCase())}),this.doneTypingInterval)}},{key:"render",value:function(){return o.a.createElement("fieldset",null,o.a.createElement("label",{htmlFor:"filter"},"API Search:"),o.a.createElement("br",null),o.a.createElement("input",{type:"text",id:"filter",onChange:this.handleFilter}))}}]),t}(o.a.Component),w=function(e){function t(e){var a;return Object(c.a)(this,t),(a=Object(u.a)(this,Object(h.a)(t).call(this,e))).handleFilterChange=a.handleFilterChange.bind(Object(d.a)(a)),a}return Object(p.a)(t,e),Object(m.a)(t,[{key:"handleFilterChange",value:function(e){this.props.onFilterChange(e)}},{key:"render",value:function(){return o.a.createElement("div",{id:"LuaAPISidebar"},o.a.createElement("div",{className:"d-none d-md-block"},o.a.createElement(y,{onFilterChange:this.handleFilterChange}),o.a.createElement("hr",null)),o.a.createElement("h5",null,o.a.createElement("a",{href:"#Actors"},"Actor Classes")),o.a.createElement("h5",null,o.a.createElement("a",{href:"#Namespaces"},"Namespaces")),o.a.createElement("h5",null,o.a.createElement("a",{href:"#Enums"},"Enums")),o.a.createElement("h5",null,o.a.createElement("a",{href:"#Singletons"},"Singletons")),o.a.createElement("h5",null,o.a.createElement("a",{href:"#GlobalFunctions"},"Global Functions")),o.a.createElement("h5",null,o.a.createElement("a",{href:"#Constants"},"Constants")))}}]),t}(r.Component),v=function(e){function t(){var e;return Object(c.a)(this,t),e=Object(u.a)(this,Object(h.a)(t).call(this)),window.addEventListener("resize",e.HandleResize),e.handleFilterChange=e.handleFilterChange.bind(Object(d.a)(e)),e}return Object(p.a)(t,e),Object(m.a)(t,[{key:"HandleResize",value:function(){window.innerWidth<768?l()("#sidebar").removeClass("position-fixed"):l()("#sidebar").addClass("position-fixed")}},{key:"handleFilterChange",value:function(e){this.props.onFilterChange(e)}},{key:"render",value:function(){return o.a.createElement(f.c,null,o.a.createElement(f.a,{path:"/LuaAPI"},o.a.createElement(w,{onFilterChange:this.handleFilterChange})),o.a.createElement(g,null))}}]),t}(r.Component),S=function(e){function t(e){var a;return Object(c.a)(this,t),(a=Object(u.a)(this,Object(h.a)(t).call(this,e))).handleFilterChange=a.handleFilterChange.bind(Object(d.a)(a)),a}return Object(p.a)(t,e),Object(m.a)(t,[{key:"handleFilterChange",value:function(e){this.props.onFilterChange(e)}},{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("div",{id:"sidebar",className:"accordion w-100 h-100 position-fixed"},o.a.createElement(v,{onFilterChange:this.handleFilterChange})))}}]),t}(r.Component),C=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"Lua for StepMania 5"),o.a.createElement("p",null,"Hello there!  In these pages, you'll find my ",o.a.createElement("strong",null,"Lua for SM5")," guide, comprised of various chapters organized under the headers ",o.a.createElement("span",{className:"d-none d-md-inline d-lg-inline d-xl-inline"},"on the right")," ",o.a.createElement("span",{className:"d-xl-none d-lg-none d-md-none"},"at the bottom")," of this page."),o.a.createElement("p",null,"If you're unsure of where to start, check out the chapter on ",o.a.createElement(E.b,{to:"/Foreword"},"What Are Actors?")," to get a sense of how Lua files are organized in StepMania 5."),o.a.createElement("p",null,"StepMania 5's complete Lua API documentation can be found in its Lua.xml file, which ships with releases of StepMania 5 in the ",o.a.createElement("samp",null,"./Docs/Luadoc/")," directory and can be viewed in most web browsers. I have also hosted a copy as part of this website: ",o.a.createElement(E.b,{to:"/LuaAPI"},"Lua For SM5: Lua API"),"."),o.a.createElement("p",null,"You can find additional resources for learning about Lua and SM5 scripting on the ",o.a.createElement(E.b,{to:"/Resources"},"Other Resources")," page."))}}]),t}(r.Component),x=a(27),A=a(13),M=a.n(A),T=function(e){function t(){var e;return Object(c.a)(this,t),(e=Object(u.a)(this,Object(h.a)(t).call(this))).updateHash=e.updateHash.bind(Object(d.a)(e)),e}return Object(p.a)(t,e),Object(m.a)(t,[{key:"updateHash",value:function(){window.location.hash="#Actors-"+this.props.actor.name}},{key:"render",value:function(){return o.a.createElement("div",{id:"Actors-"+this.props.actor.name,className:"actor-class"},o.a.createElement("h3",null,o.a.createElement(M.a,{onClick:this.updateHash,name:"link"}),this.props.actor.name,o.a.createElement("span",{className:"base",dangerouslySetInnerHTML:{__html:this.props.actor.base}})),o.a.createElement("hr",null),o.a.createElement("span",{className:"actorclass-description",dangerouslySetInnerHTML:{__html:this.props.actor.desc}}),this.props.methods)}}]),t}(r.Component),N=function(e){function t(){var e;return Object(c.a)(this,t),(e=Object(u.a)(this,Object(h.a)(t).call(this))).updateHash=e.updateHash.bind(Object(d.a)(e)),e}return Object(p.a)(t,e),Object(m.a)(t,[{key:"updateHash",value:function(){window.location.hash="#Actors-"+this.props.actor.name+"-"+this.props.method.name}},{key:"render",value:function(){return o.a.createElement("div",{id:"Actors-"+this.props.actor.name+"-"+this.props.method.name,className:"method"},o.a.createElement("div",{className:"method-signature"},o.a.createElement(M.a,{onClick:this.updateHash,name:"link"}),this.props.method.name,"(",o.a.createElement("code",null,this.props.method.arguments),")"),o.a.createElement("span",{className:"method-return"},o.a.createElement("em",null,"return: ")," ",o.a.createElement("span",{dangerouslySetInnerHTML:{__html:this.props.method.return}}),"  "),o.a.createElement("span",{className:"method-description",dangerouslySetInnerHTML:{__html:this.props.method.desc}}))}}]),t}(r.Component),k=function(e){function t(){var e;return Object(c.a)(this,t),(e=Object(u.a)(this,Object(h.a)(t).call(this))).updateHash=e.updateHash.bind(Object(d.a)(e)),e}return Object(p.a)(t,e),Object(m.a)(t,[{key:"updateHash",value:function(){window.location.hash="#Namespaces-"+this.props.namespace.name}},{key:"render",value:function(){return o.a.createElement("div",{id:"Namespaces-"+this.props.namespace.name,className:"actor-class"},o.a.createElement("h3",null,o.a.createElement(M.a,{onClick:this.updateHash,name:"link"}),this.props.namespace.name),o.a.createElement("hr",null),this.props.methods)}}]),t}(r.Component),L=function(e){function t(){var e;return Object(c.a)(this,t),(e=Object(u.a)(this,Object(h.a)(t).call(this))).updateHash=e.updateHash.bind(Object(d.a)(e)),e}return Object(p.a)(t,e),Object(m.a)(t,[{key:"updateHash",value:function(){window.location.hash="#Namespaces-"+this.props.namespace.name+"-"+this.props.method.name}},{key:"render",value:function(){return o.a.createElement("div",{id:"Namespaces-"+this.props.namespace.name+"-"+this.props.method.name,className:"method"},o.a.createElement("div",{className:"method-signature"},o.a.createElement(M.a,{onClick:this.updateHash,name:"link"}),this.props.method.name,"(",o.a.createElement("code",null,this.props.method.arguments),")"),o.a.createElement("span",{className:"method-return"},o.a.createElement("em",null,"return: ")," ",o.a.createElement("span",{dangerouslySetInnerHTML:{__html:this.props.method.return}}),"  "),o.a.createElement("span",{className:"method-description",dangerouslySetInnerHTML:{__html:this.props.method.desc}}))}}]),t}(r.Component),_=(a(43),function(e){function t(e){var a;Object(c.a)(this,t),(a=Object(u.a)(this,Object(h.a)(t).call(this))).state={isLoaded:!1,mobile_api_filter:"",visible_categories:{Actors:!0,Namespaces:!0,Enums:!0,Singletons:!0,GlobalFunctions:!0,Constants:!0}};var n=Object(d.a)(a);a.actor_class_names={},a.filterResults=a.filterResults.bind(Object(d.a)(a)),a.getReturnValue=a.getReturnValue.bind(Object(d.a)(a)),a.handleFilterChangeMobile=a.handleFilterChangeMobile.bind(Object(d.a)(a));var r=function(e,t){var a=l()(e).find("Class[name='"+t+"']");if(a[0]&&a[0].attributes.base){var n=a[0].attributes.base.textContent;return" : <a href='#Actors-"+n+"'>"+n+"</a>"}return null},o=function(e){var t=e.innerHTML.trim(),a=t.match(/(<\s*link[^>]*>)(.*?)<\s*\/\s*link>/i);if(a){var r=[];a.forEach((function(t){var o=a[2],s=l.a.parseHTML(a[1]),i=s[0].attributes.getNamedItem("class");i=i&&i.nodeValue;var c=s[0].attributes.getNamedItem("function").nodeValue;if(i){if("ENUM"===i){if(c){var m="<a href='#Enums-"+c+"'>"+o+"</a>";r.push(m)}}else if(function(e){for(var t=0;t<n.namespaces.length;t++)if(n.namespaces[t]===e)return!0;return!1}(i)){var u="<a href='#Namespaces-"+i+"-"+c+"'>"+o+"</a>";r.push(u)}else if(c){var h="<a href='#Actors-"+i+"-"+c+"'>"+o+"</a>";r.push(h)}}else if("GlobalFunctions"===e.parentNode.nodeName){var d="<a href='#GlobalFunctions-"+c+"'>"+o+"</a>";r.push(d)}}));var o=0;return t.replace(/<\s*link[^>]*>.*?<\s*\/\s*link>/i,(function(e){return r[o++]}))}if(a=t.match(/<\s*link[^>]*\/>/gi)){var s=[];a.forEach((function(t){var a=l.a.parseHTML(t),n=a[0].attributes.getNamedItem("class");n=n&&n.nodeValue;var r=a[0].attributes.getNamedItem("function");if(r=r&&r.nodeValue,n)if("ENUM"===n){if(r){var o="<a href='#Enums-"+r+"'>"+r+"</a>";s.push(o)}}else if("GLOBAL"===n){if(r){var i="<a href='#GlobalFunctions-"+r+"'>"+r+"</a>";s.push(i)}}else if(r){var c="<a href='#Actors-"+n+"-"+r+"'>"+n+"."+r+"</a>";s.push(c)}else{var m="<a href='#Actors-"+n+"'>"+n+"</a>";s.push(m)}else{var u=e.parentNode.attributes.getNamedItem("name").nodeValue,h="<a href='#Actors-"+u+"-"+r+"'>"+u+"."+r+"</a>";s.push(h)}}));var i=0;return t.replace(/<\s*link[^>]*\/>/gi,(function(e){return s[i++]}))}return t};return l.a.ajax({url:"./Luadoc/LuaDocumentation.xml"}).done((function(e){l.a.ajax({url:"./Luadoc/Lua.xml"}).done((function(t){var a=l()(t).children()[0].children[1],s=Array.from(l()(e).children().find("Classes Class")),i=Array.from(l()(e).children().find("Namespaces Namespace")),c=Array.from(l()(t).children().find("Enums Enum")),m=Array.from(l()(t).children().find("Singletons Singleton")),u=Array.from(l()(e).children().find("GlobalFunctions Function")),h=Array.from(l()(t).children().find("Constants Constant")),d=[[],[],[],[],[],[]],p={};s.forEach((function(e){p[e.attributes.name.textContent]=!0})),n.actor_class_names=p,n.namespaces=i.map((function(e){return e.attributes[0].nodeValue})),s.forEach((function(e){var t=Array.from(l()(e).find("Function"));t.sort((function(e,t){return e.attributes.name.textContent.toUpperCase()<t.attributes.name.textContent.toUpperCase()?-1:e.attributes.name.textContent.toUpperCase()>t.attributes.name.textContent.toUpperCase()?1:0}));var s=t.map((function(e,t){return{name:e.attributes.name.textContent,return:n.getReturnValue(e.attributes.return.textContent),arguments:e.attributes.arguments.textContent,desc:o(e)}})),i=l()(e).find("Description");d[0].push({name:e.attributes.name.textContent,base:r(a,e.attributes.name.textContent),desc:void 0!==i[0]?i[0].innerHTML:null,methods:s})})),i.forEach((function(e){var t=Array.from(l()(e).find("Function")).map((function(e,t){return{name:e.attributes.name.textContent,return:n.getReturnValue(e.attributes.return.textContent),arguments:e.attributes.arguments.textContent,desc:o(e)}}));d[1].push({name:e.attributes.name.textContent,methods:t})})),c.forEach((function(e){var t=Array.from(l()(e).find("EnumValue")).map((function(e,t){return{name:e.attributes.name.textContent,value:e.attributes.value.textContent}}));d[2].push({name:e.attributes.name.textContent,values:t})})),m.forEach((function(e){d[3].push({name:e.attributes.name.textContent,actor_class:e.attributes.class.textContent})})),u.forEach((function(e){d[4].push({name:e.attributes.name.textContent,return:e.attributes.return.textContent,arguments:e.attributes.arguments.textContent,desc:o(e)})})),h.forEach((function(e){d[5].push({name:e.attributes.name.textContent,value:e.attributes.value.textContent})})),n.all_elements=n.get_elements_to_render(d),n.setState({isLoaded:!0,actor_classes:d[0],namespaces:d[1],enums:d[2],singletons:d[3],global_functions:d[4],constants:d[5]}),n.scroll_window_after_hashchange(),window.addEventListener("hashchange",(function(e){n.scroll_window_after_hashchange()}))}))})),a}return Object(p.a)(t,e),Object(m.a)(t,[{key:"scroll_window_after_hashchange",value:function(){var e=window.location.hash.replace("#","");if(e){var t=document.getElementById(e);if(t){var a=t.offsetTop;if(a){window.scrollTo(0,a-75)}}}}},{key:"get_elements_to_render",value:function(e){return{Actors:e[0].map((function(e,t){var a=e.methods.map((function(t,a){return o.a.createElement(N,{actor:e,method:t,key:e.name+"-"+t.name+a})}));return o.a.createElement(T,{actor:e,methods:a,key:e.name})})),Namespaces:e[1].map((function(e,t){var a=e.methods.map((function(t,a){return o.a.createElement(L,{namespace:e,method:t,key:e.name+"-"+t.name+a})}));return o.a.createElement(k,{namespace:e,methods:a,key:e.name})})),Enums:e[2].map((function(e,t){var a=e.values.map((function(t,a){return o.a.createElement("tr",{key:"enum-"+e.name+"-"+t.name+"-"+a},o.a.createElement("td",null,t.name),o.a.createElement("td",null,t.value))}));return o.a.createElement("table",{id:"Enums-"+e.name,className:"table table-hover table-sm table-bordered",key:"enum-"+e.name},o.a.createElement("thead",{className:"table-primary"},o.a.createElement("tr",null,o.a.createElement("th",null,o.a.createElement("strong",null,e.name)),o.a.createElement("th",{style:{width:"15%"}},"Value"))),o.a.createElement("tbody",null,a))})),Singletons:o.a.createElement("ul",{id:"Singletons"},e[3].map((function(e,t){return o.a.createElement("li",{key:"singleton-"+e.name},o.a.createElement("a",{href:"#Actors-"+e.actor_class},e.name))}))),GlobalFunctions:o.a.createElement("div",{className:"GlobalFunctions actor-class"},e[4].map((function(e,t){return o.a.createElement("div",{id:"GlobalFunctions-"+e.name,className:"method",key:"GlobalFunction-"+e.name+"-"+t},o.a.createElement("div",{className:"method-signature"},o.a.createElement(M.a,{onClick:function(){window.location.hash="#GlobalFunctions-"+e.name},name:"link"}),e.name,"(",o.a.createElement("code",null,e.arguments),")"),o.a.createElement("span",{className:"method-return"},o.a.createElement("em",null,"return: ")," ",o.a.createElement("span",{dangerouslySetInnerHTML:{__html:e.return}}),"  "),o.a.createElement("span",{className:"method-description",dangerouslySetInnerHTML:{__html:e.desc}}))}))),Constants:o.a.createElement("table",{id:"Constants",className:"table table-hover table-sm table-bordered"},o.a.createElement("thead",{className:"table-primary"},o.a.createElement("tr",null,o.a.createElement("th",null,o.a.createElement("strong",null,"Lua Variable")),o.a.createElement("th",null,"Value"))),o.a.createElement("tbody",null,e[5].map((function(e,t){return o.a.createElement("tr",{key:"constant-"+e.name},o.a.createElement("td",null,e.name),o.a.createElement("td",null,e.value))}))))}}},{key:"getReturnValue",value:function(e){if("void"===e)return e;if(this.actor_class_names[e])return"<a href='#Actors-"+e+"'>"+e+"</a>";var t=e.match(/{(.+)}/);return t&&this.actor_class_names[t[1]]?"{ <a href='#Actors-"+t[1]+"'>"+t[1]+"</a> }":e}},{key:"handleFilterChangeMobile",value:function(e){this.setState({mobile_api_filter:e})}},{key:"filterResults",value:function(e){var t=[[],[],[],[],[],[]];return this.state.actor_classes.forEach((function(a){if(a.name.toUpperCase().includes(e)||a.base&&a.base.toUpperCase().includes(e))t[0].push(a);else{var n=a.methods.filter((function(t){return t.name.toUpperCase().includes(e)||t.desc.toUpperCase().includes(e)}));n.length>0&&t[0].push({name:a.name,methods:n})}})),this.state.namespaces.forEach((function(a){if(a.name.toUpperCase().includes(e))t[1].push(a);else{var n=a.methods.filter((function(t){return t.name.toUpperCase().includes(e)||t.desc.toUpperCase().includes(e)}));n.length>0&&t[1].push({name:a.name,methods:n})}})),this.state.enums.forEach((function(a){if(a.name.toUpperCase().includes(e))t[2].push(a);else{var n=a.values.filter((function(t){return t.name.toUpperCase().includes(e)}));n.length>0&&t[2].push({name:a.name,values:n})}})),this.state.singletons.forEach((function(a){a.name.toUpperCase().includes(e)&&t[3].push(a)})),this.state.global_functions.forEach((function(a){(a.name.toUpperCase().includes(e)||a.desc.toUpperCase().includes(e))&&t[4].push(a)})),this.state.constants.forEach((function(a){a.name.toUpperCase().includes(e)&&t[5].push(a)})),t}},{key:"handleCategoryClick",value:function(e,t){var a=Object(x.a)({},this.state.visible_categories);a[e]=!this.state.visible_categories[e],this.setState({visible_categories:a}),l()("#"+e).toggleClass("collapsed")}},{key:"render",value:function(){var e=this;if(this.state&&this.state.isLoaded&&this.props){var t=null;if(""===this.props.api_filter&&""===this.state.mobile_api_filter)t=this.all_elements;else{var a=""!==this.props.api_filter?this.props.api_filter:this.state.mobile_api_filter;t=this.get_elements_to_render(this.filterResults(a))}var n=t.Constants.props.children[1].props.children.length;return o.a.createElement("div",{className:"LuaAPI"},o.a.createElement("p",{className:"alert alert-info"},"This version of SM5's Lua API doc is in beta, so some information may be missing!",o.a.createElement("br",null),o.a.createElement("br",null),"The original, full API doc can ",o.a.createElement("a",{href:"/Lua-For-SM5/Luadoc/Lua.xml"},"still be accessed here"),"."),o.a.createElement("div",{className:"d-md-none"},o.a.createElement(y,{onFilterChange:this.handleFilterChangeMobile}),o.a.createElement("hr",null)),o.a.createElement("h1",null,"SM5 Lua API"),o.a.createElement("h2",{id:"Actors",className:"API-Category",onClick:function(t){return e.handleCategoryClick("Actors",t)}},"Actor Classes"),o.a.createElement("div",null,this.state.visible_categories.Actors&&t.Actors),o.a.createElement("h2",{id:"Namespaces",className:"API-Category",onClick:function(t){return e.handleCategoryClick("Namespaces",t)}},"Namespaces"),o.a.createElement("div",null,this.state.visible_categories.Namespaces&&t.Namespaces),o.a.createElement("h2",{id:"Enums",className:"API-Category",onClick:function(t){return e.handleCategoryClick("Enums",t)}},"Enums"),o.a.createElement("div",null,this.state.visible_categories.Enums&&t.Enums),o.a.createElement("h2",{id:"Singletons",className:"API-Category",onClick:function(t){return e.handleCategoryClick("Singletons",t)}},"Singletons"),o.a.createElement("div",null,this.state.visible_categories.Singletons&&t.Singletons),o.a.createElement("h2",{id:"GlobalFunctions",className:"API-Category",onClick:function(t){return e.handleCategoryClick("GlobalFunctions",t)}},"Global Functions"),o.a.createElement("div",null,this.state.visible_categories.GlobalFunctions&&t.GlobalFunctions),o.a.createElement("h2",{id:"Constants",className:"API-Category",onClick:function(t){return e.handleCategoryClick("Constants",t)}},"Constants"),o.a.createElement("div",null,this.state.visible_categories.Constants&&n>0&&t.Constants))}return null}}]),t}(r.Component)),O=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"Other Resources"),o.a.createElement("h2",null,"Learning Lua"),o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://www.tutorialspoint.com/lua/"},"TutorialsPoint Lua Guide")),o.a.createElement("li",null,o.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://www.lua.org/pil/contents.html"},"Programming in Lua"))),o.a.createElement("h2",null,"Theming for StepMania 5"),o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://github.com/stepmania/stepmania/wiki/Theming"},"StepMania's GitHub Wiki Theming Page"))),o.a.createElement("h2",null,"SM/SSC File Documentation"),o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://github.com/stepmania/stepmania/wiki/sm"},".sm File Format")),o.a.createElement("li",null,o.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://github.com/stepmania/stepmania/wiki/Note-Types"},".ssc NoteTypes "))))}}]),t}(r.Component),F=a(7),D=a.n(F),j=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"What are Actors?"),o.a.createElement("h2",null,"Tables Within Tables Within..."),o.a.createElement("p",null,"An Actor is the most basic unit of StepMania scripting.  Virtually everything else that you work with in SM5 Lua, be it a Sprite, a BitmapText, or an ActorMultiVertex, is built on top of the foundation that Actor provides."),o.a.createElement("p",null,"From a scripter\u2019s perspective, an Actor is a Lua table with a few special properties that the StepMania engine will look for.  Other StepMania elements that derive from Actor are also really just Lua tables as well."),o.a.createElement("p",null,"So if you are familiar with ",o.a.createElement("em",null,"ActorFrames"),", the StepMania element that serves as a container for manipulating multiple Actors simultaneously within itself, you can start to appreciate how an ActorFrame is a table that contains Actors which are tables."),o.a.createElement("p",null,"It\u2019s tables all the way down."),o.a.createElement("h2",null,"Types of Actors"),o.a.createElement("p",null,"There are 43 specialized types of Actors available to StepMania\u2019s Lua scripting interface.  Each type has unique methods available to it and a unique use-case.  For example,"),o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement("code",null,"Quad")," actors are quadrilaterals that you can programmatically manipulate"),o.a.createElement("li",null,o.a.createElement("code",null,"BitmapText")," actors are used to draw text to the screen"),o.a.createElement("li",null,o.a.createElement("code",null,"ActorMultiVertex")," actors are arbitrary polygons that you can programmatically manipulate"),o.a.createElement("li",null,o.a.createElement("code",null,"Sprite")," actors are used to load visual assets like png images or avi movies"),o.a.createElement("li",null,o.a.createElement("code",null,"ActorFrame")," actors serve as containers for other actors, and are useful when you want to manipulate a group of actors simultaneously, rather than individually"),o.a.createElement("li",null,"etc.")),o.a.createElement("p",null,"For a complete list of SM5 Actor types, see ",o.a.createElement("a",{href:"https://github.com/stepmania/stepmania/blob/master/Docs/Themerdocs/actordef.txt"},"./Docs/ThemerDocs/actordef.txt")),o.a.createElement("h2",null,"An Example SM5 Lua Script"),o.a.createElement("p",null,"The most commonly used Actors will each be discussed in detail in the chapters under ",o.a.createElement("strong",null,"Actors")," in the navigation menu.  For now, we\u2019ll start by looking at a simple Lua script for StepMania 5."),o.a.createElement("span",{className:"CodeExample-Title"},"A Simple SM5 Lua Script:"),o.a.createElement(D.a,{className:"lua"},'\n-- start by defining an ActorFrame\n-- call it ExampleAF (example ActorFrame)\nlocal ExampleAF = Def.ActorFrame{\n\tOnCommand=function(self)\n\t\tself:Center():sleep(9999)\n\tend,\n\n\t-- since Actors are just Lua tables\n\t-- we can nest them directly inside\n\t-- the parent ActorFrame table like this\n\tDef.Quad{\n\t\tInitCommand=function(self)\n\t\t\tself:zoomto(50,137)\n\t\tend\n\t},\n\n\t-- note that since these are elements in\n\t-- a Lua table, everything is comma-delimited\n\tDef.BitmapText{\n\t\tFont="Common Normal",\n\t\tText="Eat Poptarts."\n\t}\n}\n\n\n-- since ExampleAF is an indexed Lua table, we can also\n-- add elements to its next index externally like this:\nExampleAF[#ExampleAF + 1] = Def.Sprite{\n\tTexture="chrismarks.png"\n}\n\n-- Every Lua Theme/BGCHANGE/FGCHANGE file in SM5 must return some\n-- sort of Actor. Typically, we end up returning an ActorFrame.\nreturn ExampleAF\n\t\t\t'),o.a.createElement("h2",null,"Only one Actor can be returned per file."),o.a.createElement("p",null,"The StepMania engine expects one Actor to be returned per Lua file, yet the example above features four Actors:"),o.a.createElement("ul",null,o.a.createElement("li",null,"1 ActorFrame"),o.a.createElement("li",null,"1 Quad"),o.a.createElement("li",null,"1 BitmapText"),o.a.createElement("li",null,"1 Sprite")),o.a.createElement("p",null,"How do we make this work?"),o.a.createElement("p",null,"The solution reveals a prominent design paradigm in StepMania scripting \u2013 put all other Actors inside the ActorFrame and return the ActorFrame.  An ActorFrame is just one type of Actor, and any valid Actor may be returned."),o.a.createElement("p",null,"If your Lua file is ",o.a.createElement("em",null,"very")," simple, you may only have one Actor, maybe a Sprite or a Quad.  In such situations, it is not necessary to wrap the single Actor in an ActorFrame; ",o.a.createElement("em",null,"any valid StepMania Actor may be returned.")),o.a.createElement("p",null,"Still, most files end up being complex enough to warrant using an ActorFrame."))}}]),t}(r.Component),I=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"Differences between Lua 5.0 and Lua 5.1"),o.a.createElement("p",null,"SM3.95 used ",o.a.createElement("a",{href:"http://www.lua.org/versions.html#5.0"},"Lua 5.0"),", while SM5 currently uses ",o.a.createElement("a",{href:"http://www.lua.org/versions.html#5.1"},"Lua 5.1"),". The primary differences that will likely impact your scripting experience are:"),o.a.createElement("h3",null,"Modulus Operator as %"),o.a.createElement("p",null,"Lua 5.0 required ",o.a.createElement("code",null,"math.mod()")," to perform modulo operations, while Lua 5.1 introduced a proper modulus operator."),o.a.createElement("span",{className:"CodeExample-Title"},"Modulus operator example:"),o.a.createElement(D.a,{className:"lua"},"\nlocal teamdragonforce = 3 % 2\nprint(teamdragonforce)\n-- output: 1\n"),o.a.createElement("h3",null,"Table Size Operator as #"),o.a.createElement("p",null,"Lua 5.0 required the  ",o.a.createElement("code",null,"table.getn()")," function to determine the size of an indexed table, while Lua 5.1 introduced a simple operator for this common task."),o.a.createElement("span",{className:"CodeExample-Title"},"Indexed table size operator:"),o.a.createElement(D.a,{className:"lua"},'\n-- this table is indexed, so the # operator works\nlocal StomperZ = { "fast", "brutal", "bearlike" }\nprint(#StomperZ)\n-- output: 3\n\n-- this table is key/value, so the # operator does NOT work\nlocal NotIndexed = {\n    blah = "fast",\n    nah = "brutal",\n    whatever = "bearlike"\n}\nprint(#NotIndexed)\n-- output: 0\n'),o.a.createElement("h3",null,"Simple For Loop Deprecation"),o.a.createElement("p",null,"For the official explanation, read ",o.a.createElement("a",{href:"http://www.luafaq.org/#T1.13"},"http://www.luafaq.org/#T1.13")),o.a.createElement("hr",null),o.a.createElement("h2",null,"<XML> in SM3.95 converted to { Lua } in SM5"),o.a.createElement("p",null,"A typical SM3.95 XML file would feature an ActorFrame element which would contain various children Actors.  This model is conceptually the same in SM5, but uses ",o.a.createElement("code",null,".lua")," files instead of ",o.a.createElement("code",null,".xml")," files.  So, where Actors were represented by ",o.a.createElement("em",null,"XML elements")," in SM3.95, they are ",o.a.createElement("strong",null,"Lua tables")," in SM5."),o.a.createElement("h3",null,"An Example SM3.95 XML File"),o.a.createElement("p",null,"SM3.95 had 17 unique Actor classes, each of which could be invoked with a corresponding XML element."),o.a.createElement("p",null,"A simple XML file containing some Actors commonly used in SM3.95 might look like:"),o.a.createElement("span",{className:"CodeExample-Title"},"A typical SM3.95 XML script:"),o.a.createElement(D.a,{className:"xml"},'\n\x3c!-- ActorFrame is an Actor --\x3e\n<ActorFrame OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;sleep,9999">\n    <children>\n\n\t    \x3c!-- Quad is an Actor --\x3e\n\t    <Quad\n\t         InitCommand="zoomto,50,137"\n\t    />\n\n\t    \x3c!-- BitmapText is also an Actor --\x3e\n\t    <BitmapText\n\t        File="_eurostile normal"\n\t        Text="Eat Poptarts."\n\t    />\n\n\t    \x3c!-- Sprite is, that\'s right, an Actor --\x3e\n\t    <Sprite\n\t        Texture="chrismarks.png"\n\t        Frame0000="0"\n\t    />\n\n\t</children>\n</ActorFrame>\n'),o.a.createElement("h3",null,"The Example File Converted to SM5 Lua"),o.a.createElement("p",null,"In SM5, these same Actors exist (and quite a few more; 43 in total!), but the means of invoking them has changed since pure Lua files have replaced XML.  For a complete list of SM5 Actors, see ",o.a.createElement("a",{href:"https://github.com/stepmania/stepmania/blob/master/Docs/Themerdocs/actordef.txt"},"./Docs/ThemerDocs/actordef.txt")),o.a.createElement("p",null,"The most commonly used Actors will each be discussed in detail in the following sections.  For now, we'll start by looking at the ",o.a.createElement("em",null,"SimpleExample.xml")," if we were to convert it to SM5 Lua:"),o.a.createElement("span",{className:"CodeExample-Title"},"The same script written in SM5 Lua:"),o.a.createElement(D.a,{className:"lua"},'\n--start by defining an ActorFrame\n--we\'ll call it ExampleAF (example ActorFrame)\nlocal ExampleAF = Def.ActorFrame{\n    OnCommand=function(self)\n        self:Center():sleep(9999)\n    end,\n\n\t-- since Actors are just Lua tables\n\t-- we can nest them directly inside\n\t-- the parent ActorFrame table like this\n\tDef.Quad{\n\t    InitCommand=function(self)\n\t        self:zoomto(50,137)\n\t    end\n\t},\n\n\t-- note that since these are elements in\n\t-- a Lua table, everything is comma-delimited\n\tDef.BitmapText{\n\t    Font="Common Normal",\n\t    Text="Eat Poptarts."\n\t}\n}\n\n--since ExampleAF is an indexed Lua table, we can also\n--add elements to its next index externally like this:\nExampleAF[#ExampleAF + 1] = Def.Sprite{\n    Texture="chrismarks.png"\n}\n\n--Every Lua Theme/BGCHANGE/FGCHANGE file in SM5 must return some\n--sort of Actor. Typically, we end up returning an ActorFrame.\nreturn ExampleAF\n'),o.a.createElement("h3",null,"Dynamically Adding Actors in SM5"),o.a.createElement("p",null,"We can take advantage of the idea that SM5 uses the Lua rather than XML to dynamically add actors to an ActorFrame.  Depending on the scenario and the number of Actors being added to an ActorFrame, this can ",o.a.createElement("em",null,"greatly")," reduce the lines of code you'll need to write."),o.a.createElement("p",null,"Imagine that you have a single png asset, ",o.a.createElement("em",null,"dog.png")," and you want five instances of it to appear on the screen. You'd like the end result to look like this:"),o.a.createElement("p",null,o.a.createElement("img",{alt:"",className:"img-fluid",src:"/Lua-For-SM5/img/dogs.png"})),o.a.createElement("p",null,"The basic idea is the same regardless of whether you are using SM3.95 or SM5: you'll need to define five ",o.a.createElement(E.b,{to:"/Def.Sprite"},"Sprite Actors")," within your main ActorFrame.  To achieve this in SM3.95's XML, you could do something like this:"),o.a.createElement("span",{className:"CodeExample-Title"},"Five Dogs in XML:"),o.a.createElement(D.a,{className:"xml"},'<ActorFrame OnCommand="sleep,9999">\n    <children>\n\t    <Sprite\n\t\t\tName="sprite 1"\n\t\t\tTexture="./dog.png"\n\t\t\tInitCommand="x,50;y,50"\n\t    />\n\t    <Sprite\n\t\t\tName="sprite 2"\n\t\t\tTexture="./dog.png"\n\t\t\tInitCommand="x,150;y,150"\n\t    />\n\t    <Sprite\n\t\t\tName="sprite 3"\n\t\t\tTexture="./dog.png"\n\t\t\tInitCommand="x,250;y,250"\n\t    />\n\t    <Sprite\n\t\t\tName="sprite 4"\n\t\t\tTexture="./dog.png"\n\t\t\tInitCommand="x,350;y,350"\n\t    />\n\t    <Sprite\n\t\t\tName="sprite 5"\n\t\t\tTexture="./dog.png"\n\t\t\tInitCommand="x,450;y,450"\n\t    />\n\t</children>\n</ActorFrame>\n'),o.a.createElement("p",null,"That's about 30 lines of code already to basically do nearly the same thing five times.  If you're thinking that a ",o.a.createElement("strong",null,"loop")," might be handy here, you're on ",o.a.createElement("em",null,"exactly")," the right track!  Let's rewrite that XML to be Lua for SM5."),o.a.createElement("span",{className:"CodeExample-Title"},"Five Dogs in Lua:"),o.a.createElement(D.a,{className:"lua"},'local af = Def.ActorFrame{\n\tOnCommand=function(self) self:sleep(999) end\n}\n\n-- loop from 0 to 4 and add a Sprite Actor to the af ActorFrame each time\nfor i=0,4 do\n\taf[#af+1] = LoadActor("./dog.png")..{\n\t\tName="sprite " .. i+1,\n\t\tInitCommand=function(self)\n\t\t\tself:xy(i*100+50, i*100+50)\n\t\tend\n\t}\nend\n\nreturn af\n'),o.a.createElement("p",null,"We were able to accomplish the same effect using a ",o.a.createElement("strong",null,"numerical for loop")," in SM5's Lua in only 15 lines!"),o.a.createElement("p",null,"This is a modest improvement already, but imagine if we wanted to add 100 or even 1000 instances of ",o.a.createElement("em",null,"dog.png")," to the screen.  With XML, it is necessary to explicitly define each Actor you want in your main ActorFrame, while with Lua, it is only necessary to increase the loop's stop value from ",o.a.createElement("code",null,"4")," to a different number."))}}]),t}(r.Component),P=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"Supported File Extensions"),o.a.createElement("p",null,"In StepMania 5, the supported file extensions are listed in ",o.a.createElement("a",{href:"https://github.com/stepmania/stepmania/blob/5_1-new/src/ActorUtil.cpp#L521-L572"},"/src/ActorUtil.cpp"),":"),o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement("strong",null,"Images:")," bmp, gif, jpeg, jpg, png"),o.a.createElement("li",null,o.a.createElement("strong",null,"Audio:")," mp3, oga, ogg, wav"),o.a.createElement("li",null,o.a.createElement("strong",null,"Video:")," avi, f4v, flv, mkv, mp4, mpeg, mpg, mov, ogv, webm, wmv"),o.a.createElement("li",null,o.a.createElement("strong",null,"3D Models:")," txt")),o.a.createElement("hr",null),o.a.createElement("h3",null,"Extra Notes on Filetypes:"),o.a.createElement("h4",null,"Images:"),o.a.createElement("p",null,o.a.createElement("em",null,".png")," files with even dimensions are strongly preferred."),o.a.createElement("h4",null,"Audio:"),o.a.createElement("p",null,o.a.createElement("em",null,".ogg")," files are strongly preferred; variable-bitrate mp3 files ",o.a.createElement("a",{href:"https://github.com/stepmania/stepmania/issues/369"},"are buggy"),"."),o.a.createElement("h4",null,"Video:"),o.a.createElement("p",null,"SM5 supports a broad array of codecs and containers via ",o.a.createElement("a",{href:"https://www.ffmpeg.org/"},"ffmpeg"),"."),o.a.createElement("p",null,"Please note that you cannot play audio from video files. One workaround is to extract the audio from the video, and play it at the same time as the video."),o.a.createElement("p",null,"You are generally safe to use HD video without performance issues if the computer is from the last six or seven years. The ",o.a.createElement("em",null,".avi")," container in conjunction with the h264 codec works great.  As of this writing, the ",o.a.createElement("strong",null,"h265 codec is not supported")," by SM5's version of ffmpeg."),o.a.createElement("p",null,o.a.createElement("a",{href:"https://handbrake.fr/"},"Handbrake")," is a useful, free application you can use to resize your videos and convert them to one of the aforementioned formats with the h264 codec."),o.a.createElement("h4",null,"3D Models:"),o.a.createElement("p",null,"3D Models still rely on MilkShape 3D ASCII text as they have since StepMania 3.9.  Documentation is scarce at best.  Sorry."))}}]),t}(r.Component),G=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,'Setting Up a "Mod" Chart'),o.a.createElement("p",null,"StepMania simfiles can be scripted to enhance gameplay using Lua and the SM5 API.  This chapter will briefly demonstrate how to prepare a simfile for such scripting."),o.a.createElement("p",{className:"alert alert-warning"},"This chapter is a work-in-progress!"),o.a.createElement("p",null,"The FGCHANGES field in your .sm file accepts several arguments delimited by equals signs.  The first two are the most important:"),o.a.createElement("ul",null,o.a.createElement("li",null,"the beat in Gameplay at which you want the Lua file to be activated"),o.a.createElement("li",null,"a path to the Lua file where you will be writing your code")),o.a.createElement("p",null,"So, for exmaple, if you named your file ",o.a.createElement("em",null,"default.lua")," and wanted it to trigger at beat 4, you would need to change your .sm (or .ssc) file to include:"),o.a.createElement(D.a,null,"#FGCHANGES: 4.000=./default.lua=1.000=0=0=1=====;"),o.a.createElement("p",null,"The other arguments (the ",o.a.createElement("code",null,"1.000")," and subsequent ",o.a.createElement("code",null,"0"),"s and ",o.a.createElement("code",null,"1"),"s) are ",o.a.createElement("a",{href:"https://github.com/stepmania/stepmania/wiki/sm#bgchanges"},"various flags that are basically vestiges")," from SM3.9 that are necessary to include but will have no impact on your Lua.  For FGCHANGES, you can just copy/paste them into your .sm file for each FGCHANGE."),o.a.createElement("p",null,'Any Lua-based actors loaded as FGCHANGES will be cleared from the screen as soon as they are "done." This means that if the actor isn\'t actively ',o.a.createElement(E.b,{to:"/Simple-Tweens"},"tweening")," in some way, it will be cleared from memory."),o.a.createElement("p",null,"  A common strategy is to ensure that this doesn't occur prematurely is to add a dummy keep-alive Actor that does nothing but sleep for as long as you want the overall Lua file to persist for. That might look like:"),o.a.createElement(D.a,{className:"lua"},'\n-- a Lua file can only return one Actor\n-- so the common strategy is to return one ActorFrame that contains many sub-Actors\nreturn Def.ActorFrame{\n\t-- keep-alive Actor\n\t-- this will allow the file to persist for 999 seconds\n\t-- (or, until the end of the stepchart)\n\tDef.Actor{ OnCommand=function(self) self:sleep(999) end },\n\n\t-- the Sprite Actor\n\tDef.Sprite{\n\t\tTexture="awesome.png",\n\t\tOnCommand=function(self)\n\t\t\tself:Center():FullScreen():sleep(3):diffusealpha(0)\n\t\tend\n\t}\n}\n'),o.a.createElement("p",null,"In the exmaple above, the the Sprite has a ",o.a.createElement("code",null,"sleep(3)")," tween, so it would appear on the screen for 3 seconds at beat 4 (specified by the .sm file) and then have an alpha of ",o.a.createElement("code",null,"0")," applied, causing it to be effectively invisible."),o.a.createElement("p",null,"If you are testing this in SM5's editor, you'll need to ensure that you have ",o.a.createElement("strong",null,"Show Background Changes")," enabled, otherwise neither BGChanges nor FGChanges will appear."),o.a.createElement("p",null,"SM5's Lua error reporting interface is invaluable when scripting things like this. You can toggle it on/off by holding ",o.a.createElement("kbd",null,"F3")," and tapping ",o.a.createElement("kbd",null,"F6")," then tapping ",o.a.createElement("kbd",null,"8")),o.a.createElement("p",null,"Finally, if there are no Lua errors, and you still can't get anything to appear, you may need to reload your simfiles."))}}]),t}(r.Component),R=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"Quad"),o.a.createElement("p",null,o.a.createElement("em",null,"Quad")," actors are programmatically drawn ",o.a.createElement("em",null,"quad"),"rilaterals that can have properties like size, position, and color.  If you don't specify, Quad actors are white and have a height and width of 0 by default."),o.a.createElement("span",{className:"CodeExample-Title"},"A very simple Quad example:"),o.a.createElement(D.a,{className:"lua"},'\n-- a white quad with height and width of 100px\nDef.Quad{\n    Name="WhiteQuad",\n    InitCommand=function(self)\n        self:zoomto(100,100)\n    end\n}\n'),o.a.createElement("p",null,"A common question that people new to StepMania scripting have is:"),o.a.createElement("p",null,o.a.createElement("strong",null,"Where are those commands like")," ",o.a.createElement("code",null,"zoomto()")," ",o.a.createElement("strong",null,"coming from?")),o.a.createElement("p",null,"Keeping in mind that a ",o.a.createElement("em",null,"Quad")," is a specific type of StepMania ",o.a.createElement("em",null,"Actor"),", we can look to StepMania's Lua API for a complete list of methods available to all ",o.a.createElement(E.b,{to:"/LuaAPI#Actors-Actor"},"Actor objects"),"."),o.a.createElement("h2",null,"A More Advanced Example"),o.a.createElement("p",null,"Since Quads are fairly simple, let's use another example to animate some Quads.  This example makes use of a new-to-SM5 feature, command-chaining, which is discussed more in-depth in the Command Chaining section."),o.a.createElement("span",{className:"CodeExample-Title"},"Three Quads with animation:"),o.a.createElement(D.a,{className:"lua"},'\n-- let\'s assume this file is being called via FGCHANGES from a simfile.\n-- Like in SM3.95, Actors from FGCHANGES that are not actively tweening\n-- are cleared from memory as the engine assumes they are "done."\n-- To counteract this, we\'ll apply a sleep() tween to the parent ActorFrame\n\nreturn Def.ActorFrame{\n\t-- the OnCommand here applies to the primary ActorFrame\n\tOnCommand=function(self)\n\t\tself:sleep(9999)\n\tend,\n\n\t-- a red quad that accelerates from offscreen-left to offscreen-right\n\t-- this makes use of the _screen and Color aliases\n\tDef.Quad{\n\t\tName="RedQuad",\n\t\tInitCommand=function(self)\n\t\t\tself:zoomto(100,100):diffuse(Color.Red)\n\t\tend,\n\t\tOnCommand=function(self)\n\t\t\tself:xy( -100, _screen.cy )\n\t\t\t\t:accelerate( 2 ):x( _screen.w + 100 )\n\t\tend\n\t},\n\n\t-- a blue quad that decelerates from offscreen-top to offscreen-bottom\n\t-- this makes use of the xy() command, which is new to SM5\n\t-- as well as command-chaining (read more on the next page!)\n\tDef.Quad{\n\t\tName="BlueQuad",\n\t\tInitCommand=function(self)\n\t\t\tself:zoomto( 100, 100 ):diffuse( Color.Blue )\n\t\tend,\n\t\tOnCommand=function(self)\n\t\t\tself:xy( _screen.cx, -100)\n\t\t\t\t:decelerate( 2 ):y( _screen.h + 100 )\n\t\t\t\t:queuecommand( "TriggerSpin" )\n\t\tend,\n\t\tTriggerSpinCommand=function(self)\n\t\t\tlocal greenquad_af = self:GetParent():GetChild( "GreenQuadAF" )\n\t\t\tgreenquad_af:GetChild( "GreenQuad" ):queuecommand( "Grow" )\n\t\tend\n\t},\n\n\t-- a green quad that waits for the two quads above to finish tweening,\n\t-- then grows out of the center of the screen while spinning\n\t--\n\t-- NOTE: We can\'t apply tween-based commands and actor effects like spin()\n\t-- simultaneously.\n\t-- zoomto() will override spin() for the duration of its linear tween.\n\t-- The way to achive the effect of spinning toward the viewer is to\n\t-- wrap the Quad in an ActorFrame, spin the ActorFrame, and zoom the Quad.\n\tDef.ActorFrame{\n\t\tName="GreenQuadAF",\n\t\tInitCommand=function(self)\n\t\t\tself:Center()\n\t\t\t\t:spin():effectmagnitude(0,0,180)\n\t\tend,\n\n\t\tDef.Quad{\n\t\t\tName="GreenQuad",\n\t\t\tInitCommand=function(self)\n\t\t\t\tself:zoomto(0,0):diffuse(Color.Green)\n\t\t\tend,\n\t\t\tGrowCommand=function(self)\n\t\t\t\tself:linear(5):zoomto(_screen.w, _screen.h)\n\t\t\tend,\n\t\t}\n\t}\n}\n'),o.a.createElement("h2",null,"The ",o.a.createElement("em",null,"_fallback")," theme has some helpful aliases."),o.a.createElement("p",null,"This example also uses a few helper tables defined in SM5's ",o.a.createElement("em",null,"_fallback")," theme such as the ",o.a.createElement("code",null,"Color")," table from ",o.a.createElement("a",{href:"https://github.com/stepmania/stepmania/blob/master/Themes/_fallback/Scripts/02%20Colors.lua"},"02 Colors.lua"),"  and the ",o.a.createElement("code",null,"_screen")," table from ",o.a.createElement("a",{href:"https://github.com/stepmania/stepmania/blob/master/Themes/_fallback/Scripts/01%20alias.lua"},"01 alias.lua"),"."))}}]),t}(r.Component),H=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"BitmapText"),o.a.createElement("p",null,o.a.createElement("em",null,"BitmapText")," Actors are used to display text on the screen."),o.a.createElement("p",null,"As Lua tables, they have two unique elements, ",o.a.createElement("code",null,"Font")," and ",o.a.createElement("code",null,"Text"),".  ",o.a.createElement("code",null,"Font")," should be set to any font in the current or ",o.a.createElement("em",null,"_fallback")," theme's ",o.a.createElement("em",null,"./Font")," directory. ",o.a.createElement("code",null,"Text")," should be set to a string value, but it can be left empty or not declared at all if you intend to programmatically set the text later with the ",o.a.createElement("code",null,"settext()")," method."),o.a.createElement("p",null,'Here is a very simple example that would display the text "Hello SM5!"'),o.a.createElement("span",{className:"CodeExample-Title"},"Simple BitmapText example"),o.a.createElement(D.a,{className:"lua"},'Def.BitmapText{\n\tFont="Common normal",\n\tText="Hello SM5!",\n\tInitCommand=function(self) self:Center() end\n}\n'),o.a.createElement("p",null,"StepMania 5's ",o.a.createElement("em",null,"_fallback")," theme defines a helper function, ",o.a.createElement("code",null,"LoadFont()"),", that can be used to simplify the above code somewhat."),o.a.createElement("span",{className:"CodeExample-Title"},"BitmapText example using LoadFont()"),o.a.createElement(D.a,{className:"lua"},'LoadFont("Common normal")..{\n\tText="Hello SM5!",\n\tInitCommand=function(self) self:Center() end\n}\n'),o.a.createElement("hr",null),o.a.createElement("h3",null,"Loading Custom Fonts within a Scripted Simfile"),o.a.createElement("p",null,"Note that the ",o.a.createElement("code",null,"LoadFont()")," helper function can only be used to load BitmapText fonts contained within the current theme's ",o.a.createElement("code",null,"./Fonts/")," directory. If you are working within the context of a ",o.a.createElement(E.b,{to:"/Lua-For-SM5/Mod-Chart-Setup"},"scripted simfile")," and are trying to load a custom BitmapText font that is located within the simfile directory itself, you can do so like this:"),o.a.createElement("span",{className:"CodeExample-Title"},"loading a custom BitmapText from within a simfile"),o.a.createElement(D.a,{className:"lua"},'Def.BitmapText{\n    File=GAMESTATE:GetCurrentSong():GetSongDir().."Fonts/helvetica neue/_helvetica neue 20px.ini",\n    Text="Hello, World!",\n    InitCommand=function(self) self:diffuse(1,1,1,1):Center():shadowlength(0.75) end\n}\n'),o.a.createElement("p",null,"The program used to turn ttf fonts into spritesheets that StepMania can use comes bundled with release versions of SM5 for Windows in the ",o.a.createElement("code",null,"./Program/")," folder, and is titled ",o.a.createElement("strong",null,"Texture Font Generator.exe"),". While is it Windows-only, it works great on macOS using ",o.a.createElement("a",{href:"https://www.davidbaumgold.com/tutorials/wine-mac/"},"Wine"),"."),o.a.createElement("p",null,"When loading custom fonts within scripted simfiles like this, it may be necessary to modify the ini file that ",o.a.createElement("em",null,"Texture Font Generator.exe")," outputs for character widths to be respected."),o.a.createElement("span",{className:"CodeExample-Title"},"the ini file Texture Font Generator will give you"),o.a.createElement(D.a,{className:"ini"},"[common]\nBaseline=20\n# etc.\n\n[main]\nLine  0= !\"$%&'()*+,-.\nLine  1=/0123456789:;<\nLine  2=>?@ABCDEFGHIJKL\nLine  3=MNOPQRSTUVWXYZ\nLine  4=^_abcdefghij\n# etc.\n\n0=6\n1=5\n2=7\n3=11\n4=11\n5=18\n# etc.\n"),o.a.createElement("p",null,"If you find that character widths seem incorrect, you may be able to fix this issue by removing the ",o.a.createElement("code",null,"[main]")," section from the font's ini file so that everything is defined under ",o.a.createElement("code",null,"[common]")," like this:"),o.a.createElement("span",{className:"CodeExample-Title"},"what you may need to change the ini file to"),o.a.createElement(D.a,{className:"ini"},"[common]\nBaseline=20\n# etc.\n\nLine  0= !\"$%&'()*+,-.\nLine  1=/0123456789:;<\nLine  2=>?@ABCDEFGHIJKL\nLine  3=MNOPQRSTUVWXYZ\nLine  4=^_abcdefghij\n# etc.\n\n0=6\n1=5\n2=7\n3=11\n4=11\n5=18\n# etc.\n"),o.a.createElement("hr",null),o.a.createElement("h3",null,"Dynamically Changing Text Using ",o.a.createElement("code",null,"settext()")),o.a.createElement("p",null,"Here is a more complex example that display a randomly selected string out of a Lua table of possibilities."),o.a.createElement("span",{className:"CodeExample-Title"},"Display one randomly selected string from a table:"),o.a.createElement(D.a,{className:"lua"},'\n-- This "phrases" table contains a list of strings.  We\'re going to randomly\n-- select one and display it in the BitmapText actor below. In SM5, it is\n-- possible (and encouraged!) to create local variables that have scope over\n-- the current file, like this.\nlocal phrases = {\n\t"There\'s the boys.",\n\t"Just move faster.",\n\t"Worst in the world.",\n\t"#bottomstruggles"\n}\n\nreturn Def.ActorFrame{\n\tInitCommand=function(self)\n\t\t-- Remember that queuecommand() waits until the next tick of the engine\'s\n\t\t-- game loop to execute whatever command we are queueing.\n\t\tself:queuecommand("ChooseAPhrase")\n\tend,\n\n\tChooseAPhraseCommand=function(self)\n\t\t-- When passed an integer, math.random() returns a random\n\t\t-- integer that is no greater than the number you pass it,\n\t\t-- but at least 1.  So, in this case, since #phrases = 4\n\t\t-- i will be assigned to 1, 2, 3 or 4.\n\t\tlocal i = math.random( #phrases )\n\n\t\t-- In contrast, playcommand() will attempt to execute immediately.\n\t\t-- playcommand() also allows us to pass a table of arguments to\n\t\t-- the next command we want to run.  In this way, we can pass\n\t\t-- variables that are otherwise local to this function of this\n\t\t-- ActorFrame to the desired function of the desired BitmapText.\n\t\tself:GetChild("CatchPhrase"):playcommand("Update", {PhraseIndex=i})\n\tend,\n\n\tLoadFont("Common normal")..{\n\t\tName="CatchPhrase",\n\t\tInitCommand=cmd(diffuse, color("#FEDCBA"); Center),\n\t\tUpdateCommand=function(self, params)\n\t\t\t-- The "params" argument comes in as a table with a single element,\n\t\t\t-- "PhraseIndex"; use that index to get one of the string phrases from\n\t\t\t-- the phrases variable and set this BitmapText to display that phrase.\n\t\t\tself:settext( phrases[ params.PhraseIndex ] )\n\t\tend\n\t}\n}\n'),o.a.createElement("p",null,"The example above is admittedly rather artificial for the sake of demonstrating how to pass variables when issuing a ",o.a.createElement("code",null,"playcommand()")," call.  The random index ",o.a.createElement("code",null,"i")," could have just as easily been generated at the top of the file next to ",o.a.createElement("code",null,"local phrases")," and not needed to be passed between the Actors' functions."),o.a.createElement("p",null,"Still, it is good to know that this can be done.  Keeping variables local (to a file, to a function, etc.) is good practice to mitigate polluting the global Lua namespace with an abundance of single-use variables.  In this regard, it can be helpful to know as many ways to pass those local variables (between files, between functions, etc.) as possible."))}}]),t}(r.Component),B=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"Sprite"),o.a.createElement("p",null,o.a.createElement("em",null,"Sprite")," actors can be used to load, display, and manipulate image and video data in StepMania 5.  If you want to load a png graphic and move it around, or animate a character from a sprite sheet, or play a video file, then the ",o.a.createElement("em",null,"Sprite")," actor is what you're looking for."),o.a.createElement("p",null,"See the page on ",o.a.createElement(E.b,{to:"Supported-File-Extensions"},"Supported File Extensions")," for a complete list of which filetypes are supported."),o.a.createElement("p",null,"As Lua tables, Sprite actors have one unique attribute that is worth knowing about, ",o.a.createElement("code",null,"Texture"),".  Let's start with a very simple example of Sprite usage."),o.a.createElement("span",{className:"CodeExample-Title"},"A very simple Sprite example:"),o.a.createElement(D.a,{className:"lua"},'\nDef.Sprite{\n\tName="Girlfriend",\n\tTexture="OverlayAttachedGirlfriend.png",\n\tInitCommand=function(self)\n\t\tself:zoom(0.5):Center()\n\tend\n}\n'),o.a.createElement("p",null,"This example will load a file titled ",o.a.createElement("em",null,"OverlayAttachedGirlfriend.png")," in the same directory as the current Lua file, ",o.a.createElement("code",null,"Center()")," it within its parent ActorFrame, and apply a 50% zoom (make it half as large)."),o.a.createElement("p",null,"A common question that people new to StepMania scripting have is:"),o.a.createElement("p",null,o.a.createElement("strong",null,"Where are those commands like")," ",o.a.createElement("code",null,"zoom()")," ",o.a.createElement("strong",null,"and")," ",o.a.createElement("code",null,"Center()")," ",o.a.createElement("strong",null,"coming from?")),o.a.createElement("p",null,"Keeping in mind that a ",o.a.createElement("em",null,"Sprite")," is a specific type of StepMania ",o.a.createElement("em",null,"Actor"),", we can look to StepMania's Lua API for a complete list of methods available first to all ",o.a.createElement(E.b,{to:"/LuaAPI#Actors-Actor"},"Actor")," and then to ",o.a.createElement(E.b,{to:"/LuaAPI#Actors-Sprite"},"Sprite")," specifically."),o.a.createElement("h2",null,"Animated Spritesheets"),o.a.createElement("p",null,"What about sprite sheets for animated sprites?  StepMania's engine is hardcoded to look for patterns in the filename with Sprite actors.  If you are loading a sprite sheet that you intend to animate through, you'll want to ensure that the filename of the png you are loading ends with the pattern: ",o.a.createElement("em",null,"(columns)"),"x",o.a.createElement("em",null,"(rows)")),o.a.createElement("p",null,"For example. this sprite of Dr. WIly has 6 columns across 1 row."),o.a.createElement("p",null,o.a.createElement("img",{alt:"a 6 by 1 spritesheet of Dr. Wily",src:"/Lua-For-SM5/img/wily 6x1.png"})),o.a.createElement("p",null,"For StepMania to recognize it properly as a sprite sheet, you would want to append ",o.a.createElement("strong",null,"6x1")," to the end of the filename, resulting in something like ",o.a.createElement("strong",null,"Wily 6x1.png"),"."),o.a.createElement("p",null,"When working with sprite sheets, ",o.a.createElement("em",null,"Sprite")," actors can have infinitely many more attributes for each ",o.a.createElement("code",null,"Frame")," and each Frame's ",o.a.createElement("code",null,"Delay")," values, but there are better ways of doing handling those.  Let's look at an old example from ",o.a.createElement("a",{href:"https://www.youtube.com/watch?v=KhwxI60WeWU"},"The Ballad of Ian")," from the D.O.W.N.S. 3 ITG tournament in January 2013."),o.a.createElement("span",{className:"CodeExample-Title"},"Old example from The Ballad of Ian.  Don't do this:"),o.a.createElement(D.a,{className:"lua"},'\nDef.Sprite {\n\tTexture="spin 13x1.png",\n\tFrame0000=0,\n\tDelay0000=0.0516,\n\tFrame0001=1,\n\tDelay0001=0.0516,\n\tFrame0002=2,\n\tDelay0002=0.0516,\n\tFrame0003=3,\n\tDelay0003=0.0516,\n\tFrame0004=4,\n\tDelay0004=0.0516,\n\tFrame0005=5,\n\tDelay0005=0.0516,\n\tFrame0006=6,\n\tDelay0006=0.0516,\n\tFrame0007=7,\n\tDelay0007=0.0516,\n\tFrame0008=8,\n\tDelay0008=0.0516,\n\tFrame0009=9,\n\tDelay0009=0.0516,\n\tFrame0010=10,\n\tDelay0010=0.0516,\n\tFrame0011=11,\n\tDelay0011=0.0516,\n\tFrame0012=12,\n\tDelay0012=0.0516,\n\tInitCommand=cmd( diffusealpha,0.5; zoom,0.6; vertalign,bottom; Center),\n\tOnCommand=cmd( sleep,8; linear,1; diffusealpha,0 ),\n}\n'),o.a.createElement("p",null,"While it is possible to specify frames and frame durations (delays) like this, you'll probably get the idea that this style is repetitive and prone to typos.  Here's a much more condensed version that accomplishes the same thing."),o.a.createElement("span",{className:"CodeExample-Title"},"A better way to manage sprite sheets:"),o.a.createElement(D.a,{className:"lua"},'\nDef.Sprite {\n\tTexture="spin 13x1.png",\n\tInitCommand=function(self)\n\t\tself:diffusealpha(0.5):zoom(0.6):vertalign(bottom):Center()\n\t\tself:SetAllStateDelays(0.0516)\n\tend,\n\tOnCommand=function(self)\n\t\tself:sleep(8):linear(1):diffusealpha(0)\n\tend\n}\n'),o.a.createElement("p",null,"Since the the time between each frame of animation is set globally using the ",o.a.createElement("code",null,"SetAllStateDelays()")," method, the code is overall less prone to mistakes via typos."),o.a.createElement("p",null,"It is worth noting that in the above, animated examples, StepMania's engine will start with the first frame and progress to the last one in order.  There are times when we may want to only animate through a portion of a sprite sheet at any given moment, like with this character sprite sheet from a typical 16bit JRPG:"),o.a.createElement("p",null,o.a.createElement("img",{alt:"a 4 by 4 spritesheet of SteveReen",src:"/Lua-For-SM5/img/Reen 4x4.png"})),o.a.createElement("p",null,"If we want the ",o.a.createElement("em",null,"Sprite")," actor to appear to be facing downward, then we'd only want StepMania to be animating through the first row of the sprite sheet.  Here's a way to handle that."),o.a.createElement("span",{className:"CodeExample-Title"},"A complex Sprite example:"),o.a.createElement(D.a,{className:"lua"},'\n-- duration between frames, in seconds\nlocal duration_between_frames = 0.15\n\n-- We want SM5 to think of this as a single Sprite actor that sometimes\n-- displays frames 0-3, and other times displays frames 8-11, so we\'re\n-- going to need to manually specify each frame index like this.\n\n-- The sequence of frames here corresponds with the physical layout of\n-- the "guy 4x4.png" sprite sheet image shown above.\n\n-- Yes, this "frames" table could be programmatically generated with\n-- a nested loop but I\'m explicitly writing it out here so it\'s\n-- easier to see what it contains for this example.\n\nlocal frames = {\n\tDown = {\n\t\t{ Frame=0,\tDelay=duration_between_frames},\n\t\t{ Frame=1,\tDelay=duration_between_frames},\n\t\t{ Frame=2,\tDelay=duration_between_frames},\n\t\t{ Frame=3,\tDelay=duration_between_frames}\n\t},\n\tLeft = {\n\t\t{ Frame=4,\tDelay=duration_between_frames},\n\t\t{ Frame=5,\tDelay=duration_between_frames},\n\t\t{ Frame=6,\tDelay=duration_between_frames},\n\t\t{ Frame=7,\tDelay=duration_between_frames}\n\t},\n\tRight = {\n\t\t{ Frame=8,\tDelay=duration_between_frames},\n\t\t{ Frame=9,\tDelay=duration_between_frames},\n\t\t{ Frame=10,\tDelay=duration_between_frames},\n\t\t{ Frame=11,\tDelay=duration_between_frames}\n\t},\n\tUp = {\n\t\t{ Frame=12,\tDelay=duration_between_frames},\n\t\t{ Frame=13,\tDelay=duration_between_frames},\n\t\t{ Frame=14,\tDelay=duration_between_frames},\n\t\t{ Frame=15,\tDelay=duration_between_frames}\n\t}\n}\n\n\nlocal af = Def.ActorFrame{\n\tOnCommand=function(self) self:sleep(999):Center() end\n}\n\naf[#af+1] = Def.Sprite{\n\tTexture="Reen 4x4.png",\n\n\tInitCommand=function(self)\n\t\t-- when not actively tweening across the screen, the Sprite should\n\t\t-- not animate, so as to appear to be "standing" in place\n\t\tself:animate(false)\n\n\t\t-- align to left and v-middle\n\t\tself:halign(0):valign(0.5)\n\t\tself:Center()\n\n\t\t-- initialize the sprite state so that the sprite\n\t\t-- starts by facing downward\n\t\tself:SetStateProperties( frames.Down )\n\tend,\n\n\t-- In SM5, the StepMessage is broadcast whenever either player\n\t-- steps on a game button during gameplay.\n\t-- This doesn\'t handle buttons like START or SELECT.\n\tStepMessageCommand=function(self, params)\n\n\t\t-- As an arbitrary decision for the sake of this example\n\t\t-- let\'s only pay attention to steps from PLAYER_1\n\t\tif params.PlayerNumber == PLAYER_1 then\n\n\t\t\t-- turn animation back on for a brief moment\n\t\t\tself:animate(true)\n\n\t\t\t-- people can hit buttons faster than every 0.25 seconds, so it\'s\n\t\t\t-- possible to queue so many tweens that SM5 complains about a tween\n\t\t\t-- overflow. Mitigate this by canceling the previous linear tween, if\n\t\t\t-- one is still running, via the stoptweening() command.  Then\n\t\t\t-- apply a new linear tween to move the sprite one directional unit.\n\t\t\tself:stoptweening():linear(0.25)\n\n\t\t\t-- the "Column" param will match up with a Gameplay arrow column\n\t\t\t-- dance has 4 columns, pump has 5, etc.\n\t\t\t-- Column is 0-indexed because it\'s coming from C++.\n\n\t\t\t-- LEFT\n\t\t\tif params.Column == 0 then\n\t\t\t\tself:SetStateProperties( frames.Left )\n\t\t\t\tself:x(self:GetX() + (-1 * self:GetWidth()))\n\n\t\t\t-- DOWN\n\t\t\telseif params.Column == 1 then\n\t\t\t\tself:SetStateProperties( frames.Down )\n\t\t\t\tself:y(self:GetY() + self:GetWidth())\n\n\t\t\t-- UP\n\t\t\telseif params.Column == 2 then\n\t\t\t\tself:SetStateProperties( frames.Up )\n\t\t\t\tself:y(self:GetY() + (-1 * self:GetWidth()))\n\n\t\t\t-- RIGHT\n\t\t\telseif params.Column == 3 then\n\t\t\t\tself:SetStateProperties( frames.Right )\n\t\t\t\tself:x(self:GetX() + self:GetWidth() )\n\n\t\t\tend\n\n\t\t\t-- The Sprite has tweened, so queue a command to stop the\n\t\t\t-- animation. We can\'t call animate(false) in here because\n\t\t\t-- it will terminate the call to animate(true) early and the\n\t\t\t-- sprite will never animate.\n\t\t\tself:queuecommand("StopAnimating")\n\t\tend\n\tend,\n\tStopAnimatingCommand=function(self)\n\n\t\t-- stop animating and set the sprite\'s frame to 0,\n\t\t-- regardless of direction the sprite is "facing".\n\t\tself:animate(false):setstate(0)\n\tend\n}\n\nreturn af\n'))}}]),t}(r.Component),W=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"Actor"),o.a.createElement("p",null,"The ",o.a.createElement("strong",null,"Actor")," class is the most generic and lightweight StepMania Actor; all other Actors inherit from it (directly or eventually). Using an Actor object directly is not generally helpful; it can't ",o.a.createElement("em",null,"do")," very much.   The ",o.a.createElement("code",null,"LoadActor()")," helper function ",o.a.createElement(E.b,{to:"LoadActor"},"discussed later")," is far more flexible and useful!"),o.a.createElement("p",null,"Still, there are times when ",o.a.createElement("strong",null,"Actor")," objects can be useful.  For example, the Simply Love SM5 port uses them when we need a hook into some message broadcast by the engine but don't need an entire ActorFrame."),o.a.createElement("p",null,"In theming example below, we are using an ",o.a.createElement("code",null,"Actor")," to listen for the ",o.a.createElement("code",null,"StartTransitioningCommand")," to be broadcast by the engine when a screen is transitioning out (and preparing to initialize the next screen).  When that occurs, we make a call to save the theme's preferences, assuming the theme is already using the ",o.a.createElement("a",{href:"https://github.com/stepmania/stepmania/blob/5_1-new/Themes/_fallback/Scripts/02%20ThemePrefs.lua"},"ThemePrefs system"),"."),o.a.createElement("span",{className:"CodeExample-Title"},"Example using an Actor directly:"),o.a.createElement(D.a,{className:"lua"},"\nreturn Def.Actor{\n\tStartTransitioningCommand=function(self)\n\t\tThemePrefs.Save()\n\tend\n}\n"),o.a.createElement("p",null,"For another example, see: ",o.a.createElement("a",{href:"https://github.com/quietly-turning/Simply-Love-SM5/blob/00fdf7112b0050d229679c39d777dfca5f0bb11a/BGAnimations/ScreenGameplay%20overlay/ReceptorArrowsPosition.lua#L25-L40"},"./Simply Love/BGAnimations/ScreenGameplay overlay/ReceptorArrowsPosition.lua")))}}]),t}(r.Component),U=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"LoadActor()"),o.a.createElement("p",null,o.a.createElement("em",null,"LoadActor()")," is a helper function with some extremely useful properties that make it a staple of any SM5 Lua scripting endeavor."),o.a.createElement("h3",null,"First Argument - A file path to Load"),o.a.createElement("p",null,"The function itself requires at least one argument, a string value of the file to load.  Let's consider a simple example, the code from ",o.a.createElement(E.b,{to:"/Def.Sprite"},"the page on Def.Sprite"),", now rewritten to use ",o.a.createElement("code",null,"LoadActor()"),":"),o.a.createElement("span",{className:"CodeExample-Title"},"A very simple LoadActor example:"),o.a.createElement(D.a,{className:"lua"},'\n-- pass the function a path to an image file\n-- and append a table with the relevant commands\nLoadActor( "OverlayAttachedGirlfriend.png" )..{\n\tName="Girlfriend",\n\tInitCommand=function(self)\n\t\tself:zoom(0.5):Center()\n\tend\n}\n'),o.a.createElement("p",null,"As ",o.a.createElement("a",{href:"https://github.com/stepmania/stepmania/blob/a888506b3270d6c66d12cb2165fb8d4b1a7d978f/Themes/_fallback/Scripts/02%20ActorDef.lua#L95-L159"},"its definition in the _fallback theme demonstrates "),", ",o.a.createElement("em",null,"LoadActor()")," can load Lua files, image/video files, sound files, models, and directories.  In this manner, it can effectively take the place of knowing when to use ",o.a.createElement("code",null,"Def.Sprite"),", ",o.a.createElement("code",null,"Def.Sound"),", ",o.a.createElement("code",null,"Def.Model")," or ",o.a.createElement("code",null,"Def.Actor"),"."),o.a.createElement("h3",null,"Second Argument - A table to pass into the loaded file"),o.a.createElement("p",null,"The optional second argument of LoadActor() is where it really shines, however.  Let's look at this slightly more complex example which uses two Lua files."),o.a.createElement("p",null,o.a.createElement("strong",null,"Primary.lua")," will load ",o.a.createElement("strong",null,"Box.lua")," once for each available human player and pass in unique properties to each.  If only PLAYER_1 is available, only the red quadrilateral on the left will be drawn.  If only PLAYER_2 is available, only the blue quadrilateral on the right will be drawn."),o.a.createElement("p",null,o.a.createElement("img",{alt:"",className:"img-fluid",src:"/Lua-For-SM5/img/loadactor.png"})),o.a.createElement("p",null,"This sort of setup allows us to keep generic code definitions in files like Box.lua, and load them as needed from the primary file with specific values passed in."),o.a.createElement("span",{className:"CodeExample-Title"},"Primary.lua"),o.a.createElement(D.a,{className:"lua"},'\nlocal af = Def.ActorFrame{\n\tInitCommand=function(self) self:Center():sleep(9999) end\n}\n\nlocal box_values ={\n\tP1 = {\n\t\tcolor = Color.Red,\n\t\tx = _screen.cx-200,\n\t\ty = _screen.cy,\n\t\th = 100,\n\t\tw = 50\n\t},\n\tP2 = {\n\t\tcolor = Color.Blue,\n\t\tx = _screen.cx+200,\n\t\ty = _screen.cy,\n\t\th = 50,\n\t\tw = 175\n\t}\n}\n\n\n-- Loop through any available human players\n-- (as opposed to "joined" players, which can be misleading)\n-- and load a Box.lua to the ActorFrame for each.\nfor player in ivalues( GAMESTATE:GetHumanPlayers() ) do\n\n\t-- Tranform a player enum string value into the part after\n\t-- the underscore with the ToEnumShortString() helper function.\n\n\t-- In this case "PlayerNumber_P1" becomes "P1"\n\t-- and "PlayerNumber_P2" becomes "P2"\n\tlocal pn = ToEnumShortString(player)\n\n\t-- The contents of Box.lua return a Quad.  Keep reading!\n\t-- Pass the specific box values we want into the file.\n\taf[#af+1] = LoadActor( "./Box.lua", box_values[ pn ] )\nend\n\nreturn af\n'),o.a.createElement("span",{className:"CodeExample-Title"},"Box.lua"),o.a.createElement(D.a,{className:"lua"},'\n-- The box_values for this player from the primary lua file\n-- are brought into this file via the "..." syntax.\nlocal this_box = ...\n\nreturn Def.Quad{\n\tInitCommand=function(self)\n\t\tself:xy( this_box.x, this_box.y )\n\t\tself:diffuse( this_box.color )\n\t\tself:setsize( this_box.w, this_box.h  )\n\tend\n}\n'))}}]),t}(r.Component),q=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"Sound"),o.a.createElement("p",null,"A ",o.a.createElement("em",null,"Sound")," actor can be used to load and play sound files.  It supports panning between the left/right stereo channels and is intended for single-use sound effects."),o.a.createElement("p",{className:"alert alert-warning"},"If you need to play an audio file that you want to be cleanly ",o.a.createElement("strong",null,"looped"),", you\u2019ll have better luck using the ",o.a.createElement("code",null,"SOUND:PlayMusicPart()")," singleton method which is documented in ",o.a.createElement(E.b,{to:"SOUND"},"SOUND"),"."),o.a.createElement("span",{className:"CodeExample-Title"},"Minimal Example:"),o.a.createElement(D.a,{className:"lua"},'Def.Sound{\n\t-- Note that you must tell the sound actor to play().\n\tFile="filepath.ogg",\n\n\tOnCommand=function(self)\n\t\tself:play()\n\tend,\n}\n'),o.a.createElement("p",null,o.a.createElement("em",null,"Sound")," actors have three unique attributes: ",o.a.createElement("code",null,"SupportPan"),", ",o.a.createElement("code",null,"SupportRateChanging"),", and ",o.a.createElement("code",null,"IsAction")),o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement("p",null,o.a.createElement("strong",null,"SupportPan")," Set this to ",o.a.createElement("code",null,"true")," if you intend to have the sound played solely through the left (for ",o.a.createElement("code",null,"PLAYER_1"),") or the right (for ",o.a.createElement("code",null,"PLAYER_2"),") audio channel.  This is accomplished with the ",o.a.createElement("code",null,"playforplayer()")," method.")),o.a.createElement("li",null,o.a.createElement("p",null,o.a.createElement("strong",null,"SupportRateChanging")," Set this to ",o.a.createElement("code",null,"true")," if you intend to manipulate the pitch and/or speed of the underlying RageSound.")),o.a.createElement("li",null,o.a.createElement("p",null,o.a.createElement("strong",null,"IsAction")," Set this to ",o.a.createElement("code",null,"true")," if you are want this Sound actor to be muted as a ",o.a.createElement("em",null,"theme action")," via ",o.a.createElement("kbd",null,"F3"),"+",o.a.createElement("kbd",null,"A"),".  This can be useful to keep themers sane while they are repeatedly debugging a single screen over and over again."))),o.a.createElement("span",{className:"CodeExample-Title"},"SupportPan Example:"),o.a.createElement(D.a,{className:"lua"},'\n-- this Sound actor will play the current theme\'s\n-- "common start" sound first for PLAYER_1, then\n-- wait two seconds, and then play it for PLAYER_2\n\nDef.Sound{\n\tFile=THEME:GetPathS("common", "start"),\n\tName="SFX_With_Pan",\n\n\tSupportPan=true,\n\tSupportRateChanging=true,\n\tIsAction=false,\n\n\tOnCommand=function(self)\n\t\t-- play the sound out of the left channel\n\t\tself:playforplayer(PLAYER_1)\n\t\tself:queuecommand("PlayAgain")\n\tend,\n\tPlayAgainCommand=function(self)\n\t\tself:sleep(2)\n\n\t\t-- play the sound out of the right channel\n\t\tself:playforplayer(PLAYER_2)\n\tend\n}\n'),o.a.createElement("span",{className:"CodeExample-Title"},"SupportRateChanging Example:"),o.a.createElement(D.a,{className:"lua"},'\n-- variables local to this file\nlocal ragesound_file\nlocal current_pitch = 1\n\n-- this Sound actor will play the same audio file\n-- three times sequentially, each time with a higher pitch\nDef.Sound{\n\tFile=THEME:GetPathS("common", "start"),\n\tName="SFX_With_Pitch",\n\tSupportRateChanging=true,\n\n\tOnCommand=function(self)\n\t\tself:queuecommand("Play")\n\tend,\n\tPlayCommand=function(self)\n\n\t\t-- get the underlying sound file data\n\t\tragesound_file = self:get()\n\n\t\t-- RageSound:pitch() take a float where\n\t\t-- 1.0 is "normal", 2.0 is twice as high as normal, etc.\n\t\tragesound_file:pitch( current_pitch )\n\n\t\t-- play the sound file using both stereo channels\n\t\tself:play()\n\n\t\t-- increment current_pitch\n\t\tcurrent_pitch = current_pitch + 1\n\n\t\t-- prevent infinite looping\n\t\tif current_pitch < 4 then\n\t\t\t-- sleep for two seconds and do it again\n\t\t\tself:sleep(2):queuecommand("Play")\n\t\tend\n\tend\n}\n'))}}]),t}(r.Component),z=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"ActorMultiVertex"),o.a.createElement("p",null," What ",o.a.createElement("code",null,"Def.Quad")," does for quadrilaterals, ",o.a.createElement("em",null,"ActorMultiVertex")," does for arbitrary polygons.  For documentation, please refer to ",o.a.createElement("a",{href:"https://github.com/stepmania/stepmania/blob/master/Docs/Themerdocs/ScreenAMVTest%20overlay.lua"},"kyzentun's writeup"),"."),o.a.createElement("p",null,"An ",o.a.createElement("em",null,"ActorMultiVertex")," actor has seven possible ",o.a.createElement(E.b,{to:"/LuaAPI#Enums-DrawMode"},"DrawModes"),".  Each DrawMode has a distinct visual style and each will require you to format your table of vertex data a little differently."),o.a.createElement("p",null,"For example, calling ",o.a.createElement("code",null,' self:SetDrawState({Mode="DrawMode_Quads"}) ')," on an ActorMultiVertex will cause it to render every four vertices as a quadrilateral.  Simply Love uses an ",o.a.createElement("em",null,"ActorMultiVertex")," in ",o.a.createElement("code",null,"DrawMode_Quads")," to ",o.a.createElement("a",{href:"https://github.com/quietl-turning/Simply-Love-SM5/blob/01c5764200ac790fa7d7e4a539afb402ba33cc16/BGAnimations/ScreenEvaluation%20common/PerPlayer/ScatterPlot.lua#L55-L79"},"render its ScatterPlot")," on ScreenEvaluation.  Each judgment from Gameplay ",o.a.createElement("a",{href:"https://i.imgur.com/JK5Li2w.png"},"is rendered")," as a quadrilateral within a single ",o.a.createElement("code",null,"Def.ActorMultiVertex")," actor.  This is more efficient than drawing additional ",o.a.createElement("code",null,"Def.Quad")," actors for each judgment."),o.a.createElement("p",null,"Another ",o.a.createElement("em",null,"ActorMultiVertex")," DrawMode is ",o.a.createElement("code",null,"DrawMode_LineStrip"),", in which your table of vertex data will be rendered as a single, continuous line.  An example of ",o.a.createElement("code",null,"DrawMode_LineStrip")," in action can be seen in ",o.a.createElement("a",{href:"https://www.youtube.com/watch?v=hKd4xkULxFk"},"this scripted simfile")," from the U.P.S. 2 pack."))}}]),t}(r.Component),Q=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"ActorFrameTexture"),o.a.createElement("p",null,o.a.createElement("em",null,"ActorFrameTexture")," actors can be used to take what would otherwise be an ActorFrame of children Sprites, BitmapTexts, etc., and render them directly to a unique texture that can be loaded into a single Sprite actor.  At that point, the original ActorFrameTexture can be cut out of the render pipeline with a ",o.a.createElement("code",null,"visible(false)")," command, and StepMania will have that many fewer actors to process every draw cycle."),o.a.createElement("p",null,"This is a more abstract and advanced topic, but it can help cut down on the overhead of having StepMania keep track of many, many actors where a single sprite might suffice."),o.a.createElement("p",null,"For now, please refer to ",o.a.createElement("a",{href:"https://github.com/stepmania/stepmania/blob/master/Docs/Themerdocs/Examples/Example_Actors/ActorFrameTexture.lua"},"Matt Gardner's writeup"),"."))}}]),t}(r.Component),V=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"Model"),o.a.createElement("p",{className:"alert alert-info"},o.a.createElement("em",null,"This article was graciously contributed by ",o.a.createElement("a",{href:"https://github.com/JoseVarelaP"},"JoseVarelaP"),"!")),o.a.createElement("p",null,o.a.createElement("em",null,"Model")," is an actor class used to load 3D models into StepMania 5.  At this time, StepMania 5 only supports one format: ",o.a.createElement("strong",null,o.a.createElement("em",null,"MilkShape 3D ASCII")),".  This means that modeling must be done using the MilkShape 3D software which is only for Windows OS."),o.a.createElement("p",null,"Let's start by looking at a very simple example:"),o.a.createElement("span",{className:"CodeExample-Title"},"Simple Def.Model Example"),o.a.createElement(D.a,{className:"lua"},'Def.Model {\n\tMeshes="MyModel.txt",\n\tMaterials="MyModel.txt",\n\tBones="MyModel.txt",\n\tOnCommand=function(self)\n\t\tself:Center()\n\tend,\n}\n'),o.a.createElement("p",null,"This example will load a plaintext file named ",o.a.createElement("code",null,"MyModel.txt")," that was exported from MilkShape 3D in the ",o.a.createElement("em",null,"MilkShape 3D ASCII")," format.  That single file will contain all the data needed to for a ",o.a.createElement("code",null,"Def.Model"),", including the ",o.a.createElement("code",null,"Meshes"),", ",o.a.createElement("code",null,"Materials"),", and ",o.a.createElement("code",null,"Bones"),"."),o.a.createElement("h3",null,"Meshes, Materials, and Bones"),o.a.createElement("p",null,o.a.createElement("strong",null,"Meshes")," are the composition and structure of the ",o.a.createElement("code",null,"Model"),".  This data represents the vertices that make the ",o.a.createElement("code",null,"Model")," take shape."),o.a.createElement("p",null,o.a.createElement("strong",null,"Materials")," are the textures that the model will use. These can be any of the image formats listed in the ",o.a.createElement(E.b,{to:"Supported-File-Extensions"},"Supported File Extensions")," page. They can also be ",o.a.createElement("em",null,".ini")," files that define animated textures on a ",o.a.createElement(E.b,{to:"Def.Sprite"},"Def.Sprite"),"."),o.a.createElement("p",null,o.a.createElement("strong",null,"Bones")," make the model come to life. They can be defined within the primary model file, or, in the case of dancing characters, be controlled via a separate file that only contains the bones."),o.a.createElement("p",null,"In the above example, all three attributes used the same filepath; all the necessary data was contained within a single file.  It is possible to configure the MilkShape 3D software to output distinct files for meshes, materials, and bones, and set each ",o.a.createElement("code",null,"Def.Model")," attribute accordingly, but that is outside the scope of this lesson."),o.a.createElement("p",{className:"alert alert-warning"},"All three attributes ",o.a.createElement("strong",null,"must")," be provided within ",o.a.createElement("code",null,"Def.Model")," as paths to resources that can be loaded or StepMania will crash."),o.a.createElement("p",null,"If you wish to load the ",o.a.createElement("code",null,"Model")," without having to add bones, use ",o.a.createElement(E.b,{to:"LoadActor"},"LoadActor()")," instead."),o.a.createElement("span",{className:"CodeExample-Title"},"Using LoadActor() to Make Life Easier"),o.a.createElement(D.a,{className:"lua"},'LoadActor("MyModel.txt")..{\n    OnCommand=cmd(Center);\n}\n'),o.a.createElement("h3",null,"Dancing Character Models"),o.a.createElement("p",null,"While dancing characters typically appear in ScreenGameplay, it is possible to load them into any screen using ",o.a.createElement("code",null,"Def.Model"),".  The following example can be used to load a randomly selected dancing character into the scene."),o.a.createElement("span",{className:"CodeExample-Title"},"Random Dancing Character"),o.a.createElement(D.a,{className:"lua"},"-- This will load a random character from SM5's ./Characters folder\n\n-- acquire a handle on a single, randomly selected\n-- dancing character using CHARMAN\nlocal CharacterToLoad = CHARMAN:GetRandomCharacter()\n\nDef.Model {\n\tMeshes=CharacterToLoad:GetModelPath(),\n\tMaterials=CharacterToLoad:GetModelPath(),\n\tBones=CharacterToLoad:GetModelPath(),\n\tOnCommand=function(self)\n\t\tself:Center()\n\tend,\n}\n"),o.a.createElement("p",null,o.a.createElement("img",{alt:"",className:"img-fluid",src:"/Lua-For-SM5/img/Model-Faraway.png"})),o.a.createElement("p",null,"Wait a second - why is the model so far away?"),o.a.createElement("p",null,"This is caused by how most 3D modelers have made their models to function with the corresponding ",o.a.createElement("em",null,"DDR-PC bones"),", which are the most commonly used bones for dancing characters in StepMania.  As a result, dancing characters typically appear tiny when used outside of gameplay."),o.a.createElement("p",null,"Another thing to note is how the model is presented by default \u2013 it's facing away from us, the viewer.  This behavior can be changed by rotating on the ",o.a.createElement("code",null,"y")," axis and explicitly setting a ",o.a.createElement("code",null,"z")," value."),o.a.createElement("span",{className:"CodeExample-Title"},"Random Dancing Character, Better"),o.a.createElement(D.a,{className:"lua"},"-- acquire a handle on a single, randomly selected\n-- dancing character using CHARMAN\nlocal CharacterToLoad = CHARMAN:GetRandomCharacter()\n\nDef.Model {\n\tMeshes=CharacterToLoad:GetModelPath(),\n\tMaterials=CharacterToLoad:GetModelPath(),\n\tBones=CharacterToLoad:GetModelPath(),\n\tOnCommand=function(self)\n\t\t-- Set the model's y rotation to accommodate our vantage point\n\t\t-- and apply a z that will get the model closer to the camera.\n\t\tself:Center():rotationy(180):z(300)\n\tend,\n}\n"),o.a.createElement("p",null,o.a.createElement("img",{alt:"",className:"img-fluid",src:"/Lua-For-SM5/img/Model-MeshIntro.png"})),o.a.createElement("p",null,"Okay, that's closer, but it still doens't look like the dancing character from gameplay!"),o.a.createElement("p",null,"There's one additional \"gotcha\" regarding model animations in StepMania's dancing characters.  They are not handled by or defined within the model, but rather the ",o.a.createElement("em",null,"bones"),".  To add animations to the model, pass the ",o.a.createElement("code",null,"Bones")," attribute of the ",o.a.createElement("code",null,"Def.Model")," a dedicated bones file."),o.a.createElement("span",{className:"CodeExample-Title"},"Random Dancing Character, Fixed"),o.a.createElement(D.a,{className:"lua"},"-- acquire a handle on a single, randomly selected\n-- dancing character using CHARMAN\nlocal CharacterToLoad = CHARMAN:GetRandomCharacter()\n\nDef.Model {\n\tMeshes=CharacterToLoad:GetModelPath(),\n\tMaterials=CharacterToLoad:GetModelPath(),\n\n\t-- For this example, we'll provide a path to a dedicated bones file\n\t-- by using SM5's Character GetRestAnimationPath() method\n\t-- for this example, we'll use the Rest Animation\n\tBones=CharacterToLoad:GetRestAnimationPath(),\n\n\tOnCommand=function(self)\n\t\t-- Set the model's y rotation to accommodate our vantage point\n\t\t-- and apply a z that will get the model closer to the camera.\n\t\tself:Center():rotationy(180):z(300)\n\n\t\t-- since we're using the rest animation, we'll want to also set\n\t\t-- the y() position to be lower on on the screen\n\t\tself:addy(10)\n\tend\n}\n"),o.a.createElement("p",null,o.a.createElement("img",{alt:"",className:"img-fluid",src:"/Lua-For-SM5/img/Model-WithBones.png"})),o.a.createElement("p",null,"As a final note, some models may have inverted vertexes, which can cause some polygons to collide with one another and draw in the wrong order. To fix this, set the model's ",o.a.createElement("code",null,"Cull Mode")," to ",o.a.createElement("code",null,"none"),"."),o.a.createElement("span",{className:"CodeExample-Title"},"Random Dancing Character, CullMode None"),o.a.createElement(D.a,{className:"lua"},"-- acquire a handle on a single, randomly selected\n-- dancing character using CHARMAN\nlocal CharacterToLoad = CHARMAN:GetRandomCharacter()\n\nDef.Model {\n\tMeshes=CharacterToLoad:GetModelPath(),\n\tMaterials=CharacterToLoad:GetModelPath(),\n\n\tBones=CharacterToLoad:GetRestAnimationPath(),\n\n\tOnCommand=function(self)\n\t\t-- Set the model's y rotation to accommodate our vantage point\n\t\t-- and apply a z that will get the model closer to the camera.\n\t\tself:Center():rotationy(180):z(300)\n\n\t\t-- since we're using the rest animation, we'll want to also set\n\t\t-- the y() position to be lower on on the screen\n\t\tself:addy(10)\n\n\t\t-- finally, set the Cull Mode to none\n\t\tself:cullmode(\"CullMode_None\")\n\tend\n}\n"))}}]),t}(r.Component),Y=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"SCREENMAN Singleton"),o.a.createElement("p",null,"The SCREENMAN (short for ",o.a.createElement("em",null,"Screen Manager"),") singleton is primarily used in conjunction with its ",o.a.createElement("code",null,"GetTopScreen()")," method to do just that \u2013 get the screen that is currently on the top of StepMania's screen stack.  (This typically means the current screen.)"),o.a.createElement("p",null,"SCREENMAN also has a some other methods which are worth knowing, namely ",o.a.createElement("code",null,"SystemMessage()"),".   As we'll demonstrate in ",o.a.createElement(E.b,{to:"/Debugging"},"the chapter on Debugging"),", ",o.a.createElement("code",null,"SystemMessage()"),"  can be handy for quick debugging."),o.a.createElement("h3",null,"GetTopScreen()"),o.a.createElement("p",null,"Within the context of theming and simfile scripting, calling ",o.a.createElement("code",null,"SCREENMAN:GetTopScreen()")," will return the screen currently being displayed in the form of a ",o.a.createElement("em",null,"screen")," object. For example, calling it on ScreenGameplay will get you the gameplay screen in the form of a screen object.  Calling it on ScreenPlayerOptions wil do similarly but return the player options screen."),o.a.createElement("p",null,"While there are some methods available to ",o.a.createElement("em",null,"all")," ",o.a.createElement(E.b,{to:"/LuaAPI#Actors-Screen"},"screen objects")," (like ",o.a.createElement("code",null,"AddInputCallback()")," which is covered in ",o.a.createElement(E.b,{to:"/Arbitrary-Input"},"Handling Arbitrary Input"),"), there are many more that depend on the class of the current Screen. A screen object of class ",o.a.createElement("em",null,"ScreenGameplay")," will have the method ",o.a.createElement("code",null,"GetLifeMeter()")," which returns a ",o.a.createElement(E.b,{to:"/LuaAPI#Actors-LifeMeter"},"LifeMeter")," object. A screen object of class ",o.a.createElement("em",null,"ScreenSelectMusic")," will have the method ",o.a.createElement("code",null,"GetMusicWheel()")," which returns a ",o.a.createElement(E.b,{to:"/LuaAPI#Actors-MusicWheel"},"MusicWheel")," ojbect."),o.a.createElement("p",null,"Here is a small example that uses ",o.a.createElement("code",null,"GetTopScreen()")," on ScreenSelectMusic to get a Lua reference to the MusicWheel and change the current sort of that MusicWheel.  In order for this code to work, it must be called from a theme's ScreenSelectMusic."),o.a.createElement("span",{className:"CodeExample-Title"},"Using SCREENMAN:GetTopScreen() to get ScreenSelectMusic"),o.a.createElement(D.a,{className:"lua"},'\nreturn Actor{\n\n\t-- InitCommand happens before the screen we want is the TopScreen,\n\t-- so calling GetTopScreen() during an InitCommand would fetch the\n\t-- screen being transitioned out of that is about to be destroyed.\n\t-- It WILL be ready by the time OnCommand is called, however.\n\tOnCommand=function(self)\n\n\t\t-- Since this Lua is being called on ScreenSelectMusic\n\t\t-- the topscreen variable will be a screen object of ScreenSelectMusic.\n\t\tlocal topscreen = SCREENMAN:GetTopScreen()\n\n\t\t-- Get a Lua reference to the engine\'s MusicWheel\n\t\t-- This is a Lua object of type "MusicWheel"\n\t\tlocal MusicWheel = topscreen:GetMusicWheel()\n\n\t\t-- Change the current sort of the MusicWheel.\n\t\t-- Fot a full list of available sorts, check the SortOrder enum\n\t\t-- as documented in the Lua API.\n\t\tMusicWheel:ChangeSort("SortOrder_Artist")\n\tend\n}\n'),o.a.createElement("p",null,"Again, there are many custom methods that belong to the many different classes of screens, more than can be reasonably documented here.  For a full list, please refer to the various screen classes documented in the ",o.a.createElement(E.b,{to:"/LuaAPI"},"SM5 Lua API"),".  This currently includes everything from ",o.a.createElement("strong",null,"Class Screen"),":",o.a.createElement("em",null,"ActorFrame")," down to ",o.a.createElement("strong",null,"Class ScreenWithMenuElementsSimple"),":",o.a.createElement("em",null,"ScreenWithMenuElements")," (with the exception of ScreenManager itself, of course!)."))}}]),t}(r.Component),J=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"SOUND Singleton"),o.a.createElement("p",null,"The SOUND singleton can be used to play audio files from a theme or simfile and has some capabilities that a ",o.a.createElement(E.b,{to:"/Def.Sound"},"Sound actor")," lacks."),o.a.createElement("h3",null,"SOUND can be used to loop audio files cleanly"),o.a.createElement("p",null,"Namely, SOUND can be used to easily and cleanly loop audio files via the ",o.a.createElement("code",null,"PlayMusicPart()")," method.  Additionally, SOUND has some helpful methods like ",o.a.createElement("code",null,"DimMusic()")," and ",o.a.createElement("code",null,"StopMusic()")," that might make it especially interesting from the perspective of a simfile mini-game."),o.a.createElement("p",null,"Here is a simple example that could be called from within a simfile's BGCHANGE or FGCHANGE script.  It assumes that there is a file ",o.a.createElement("em",null,"love-is-war.ogg")," located in the root of the song directory.  This example uses ",o.a.createElement("code",null,"PlayMusicPart()")," which accepts eight arguments:"),o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement("strong",null,"music_path")," (string) \u2013 the path to the audio file you want to load"),o.a.createElement("li",null,o.a.createElement("strong",null,"music_start")," (float) \u2013 how many seconds into the file you want playback to start"),o.a.createElement("li",null,o.a.createElement("strong",null,"music_length")," (float) \u2013 how many seconds of the file you want to play"),o.a.createElement("li",null,o.a.createElement("strong",null,"fade_in")," (float) \u2013 how many seconds should the file fade in over"),o.a.createElement("li",null,o.a.createElement("strong",null,"fade_out")," (float) \u2013 how many seconds should the file fade out over"),o.a.createElement("li",null,o.a.createElement("strong",null,"loop")," (boolean) \u2013 set to ",o.a.createElement("code",null,"true")," if you want the audio file to loop until told to stop"),o.a.createElement("li",null,o.a.createElement("strong",null,"apply_rate")," (boolean) \u2013 should this audio file follow the engine's internal sense of music rate?"),o.a.createElement("li",null,o.a.createElement("strong",null,"align_beat")," (boolean) \u2013 if ",o.a.createElement("code",null,"true")," or ",o.a.createElement("code",null,"nil"),", the playback duration is automatically adjusted to cover an integer number of beats")),o.a.createElement("span",{className:"CodeExample-Title"},"Simple usage of SOUND singleton:"),o.a.createElement(D.a,{className:"lua"},'\n\treturn Def.Actor{\n\tName="BGM",\n\tOnCommand=function(self, params)\n\t\tlocal directory = GAMESTATE:GetCurrentSong():GetSongDir()\n\t\tlocal path = directory .. "love-is-war.ogg"\n\n\t\t-- love-is-war.ogg is 4 minutes and 10 seconds in duration.\n\t\t-- We want it to loop.\n\t\tSOUND:PlayMusicPart(path, 0, 250.4, 0, 0, true, true, true)\n\n\t\t-- Wait 10 seconds, then queue a command where we\'ll\n\t\t-- lower the playback volume\n\t\tself:sleep(10):queuecommand("LowerPlaybackVolume")\n\tend,\n\tLowerPlaybackVolumeCommand=function(self)\n\n\t\t-- Lower the volume to 33% for a duration of 10 seconds.\n\t\tSOUND:DimMusic(0.33, 10)\n\tend,\n\tOffCommand=function(self)\n\n\t\t-- We don\'t want this audio to continue playing past\n\t\t-- ScreenGameplay, so, when this actor\'s OffCommand\n\t\t-- is triggered, stop the SOUND singleton.\n\t\tSOUND:StopMusic()\n\tend\n}\n'),o.a.createElement("h3",null,"SOUND or Def.Sound{} ?"),o.a.createElement("p",null,"Of course, the SOUND singleton lacks some of the special features that a ",o.a.createElement(E.b,{to:"Def.Sound"},"Sound actor")," possesses."),o.a.createElement("p",null,"Only one sound can be played via SOUND at any given moment, while there can be multiple ",o.a.createElement("em",null,"Sound")," actors loaded simultaneously.  Furthermore, SOUND has no control over playback pitch or stereo panning.  Thus, both the SOUND singleton and ",o.a.createElement("em",null,"Sound")," actors have unique and valid use cases."))}}]),t}(r.Component),X=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"Debugging"),o.a.createElement("p",null,"Using ",o.a.createElement(E.b,{to:"/SCREENMAN"},"SCREENMAN"),"'s ",o.a.createElement("code",null,"SystemMessage()")," method may perhaps be the most tried-and-true means of quickly displaying debugging output to the Screen.  ",o.a.createElement("code",null,"SystemMessage()")," accepts a string as an argument and displays it at the top of the screen for a few seconds."),o.a.createElement("p",null,"Let's jump into a simple example from ScreenGameplay where we listen for and print out JudgmentMessages.  A ",o.a.createElement("em",null,"Judgment")," is how each step is evaluated as it passes in Gameplay.  Each Judgment has a corresponding JudgmentMessage broadcast by the engine that contains information about that Judgment."),o.a.createElement("span",{className:"CodeExample-Title"},"Using SystemMessage() to print debug output"),o.a.createElement(D.a,{className:"Lua"},'\n-- Since the engine only broadcasts JudgmentMessages to ScreenGameplay,\n-- this example only makes sense and does anything in ScreenGameplay.\n\nreturn Def.Actor{\n\n\tJudgmentMessageCommand=function(self, params)\n\t\t-- Note that JudgementMessages will be broadcast for any human players,\n\t\t-- but to keep this example simple, we\'ll limit it to PLAYER_1.\n\t\tif params.Player == PLAYER_1 then\n\n\t\t\t-- This SystemMessage will display each judgment in string\n\t\t\t-- form at the top of the screen as it occurs.\n\t\t\t-- So, if a note passes and the player misses it,\n\t\t\t-- "TapNoteScore_Miss"  would be displayed at the\n\t\t\t-- top of the screen.\n\t\t\t--\n\t\t\t-- A W1 judgment (Marvelous in DDR, Fantastic in ITG, etc.)\n\t\t\t-- would display "TapNoteScore_W1".\n\t\t\t-- (Note that the "W" is for window, as in "timing window.")\n\t\t\t--\n\t\t\t-- Hold notes have their own, separate judgment system.\n\t\t\t-- So, when a hold note is judged, a JudgmentMessage will be\n\t\t\t-- broadcast, but the TapNoteScore parameter will be nil.\n\t\t\t-- Account for that here with a logical or statement that tries\n\t\t\t-- params.HoldNoteScore if params.TapNoteScore is nil.\n\t\t\tSCREENMAN:SystemMessage( params.TapNoteScore or params.HoldNoteScore )\n\t\tend\n\tend\n}\n'),o.a.createElement("h3",null,"Using SystemMessage() to display Table output"),o.a.createElement("p",null,o.a.createElement("code",null,"SystemMessage()")," displays strings, not tables, so if in our debugging endeavors we want such functionality, we'll have to enhance SystemMessage some with custom Lua.  The ",o.a.createElement("em",null,"Simply Love")," theme for SM5 ",o.a.createElement("a",{href:"https://github.com/quietly-turning/Simply-Love-SM5/blob/master/Scripts/06%20SL-Utilities.lua"},"includes some helper functions"),".  As the author of that theme, I encourage you to use that code in your own scripting/theming endeavors.  One way to do this is to include a copy of ",o.a.createElement("strong",null,"SL-Utilities.lua")," in the ",o.a.createElement("em",null,"./Scripts")," directory of your current theme."),o.a.createElement("p",null,"The function defined in ",o.a.createElement("strong",null,"SL-Utilities.lua")," that is relevant here is ",o.a.createElement("code",null,"SM()"),"  which is short for SystemMessage.  Assuming that SL-Utilities.lua is copied into the current theme's Scripts directory and loaded (by restarting StepMania or pressing ",o.a.createElement("kbd",null,"Control")," ",o.a.createElement("kbd",null,"F2"),"), this example will print table of the which steps were just judged in a JudgmentMessage."),o.a.createElement("span",{className:"CodeExample-Title"},"Using SM() to display a small Lua table"),o.a.createElement(D.a,{className:"lua"},"\nreturn Def.Actor{\n\tJudgmentMessageCommand=function(self, params)\n\t\t-- Again, limit to  PLAYER_1 for a more simple example.\n\t\tif params.Player == PLAYER_1 then\n\t\t\t-- SystemMessage a stringified table of note columns\n\t\t\t-- as each judgment occurs\n\t\t\tSM( params.Notes )\n\t\tend\n\tend\n}\n"),o.a.createElement("p",null,"The screenshot below shows that columns 4 and 1 (a left-right jump) were just missed."),o.a.createElement("p",null,o.a.createElement("img",{src:"/Lua-For-SM5/img/using-SM-to-debug-table.png",alt:"a screenshot demonstrating how to use the SM helper function to debug a Lua table"})),o.a.createElement("h3",null,"Knowing when to use Trace()"),o.a.createElement("p",null,"Please note that ",o.a.createElement("code",null,"SystemMessage()")," is not the only debugging tool available in StepMania.  SystemMessage() actually has a rather limited usefulness because large Lua tables can easily contain more data than StepMania's window can reasonably display.  In such situations, a proper Lua ",o.a.createElement("code",null,"Trace()")," is preferred.  Output from ",o.a.createElement("code",null,"Trace()")," is written to ",o.a.createElement("em",null,"Logs/Log.txt")),o.a.createElement("p",null,"StepMania's ",o.a.createElement("em",null,"_fallback")," theme includes a  ",o.a.createElement("code",null,"rec_print_table()")," function to assist with recursively printing deeply nested Lua tables to the Log.txt file.  Here is the example from above, reworked to to use ",o.a.createElement("code",null,"rec_print_table()")," to write the entire params table to file."),o.a.createElement("span",{className:"CodeExample-Title"},"Using rec_print_table() to log a large Lua table"),o.a.createElement(D.a,{className:"lua"},"\nreturn Def.Actor{\n\tJudgmentMessageCommand=function(self, params)\n\t\t-- recursive print the entire table of JudgmentMessage parameters\n\t\t-- to Logs/Log.txt.  This would be more information than could fit\n\t\t-- onscreen at a single moment.\n\t\trec_print_table( params )\n\tend\n}\n"))}}]),t}(r.Component),K=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"Command-Chaining"),o.a.createElement("p",null,"In StepMania 5, commands applied to actors can be chained, resulting in a more clean and terse syntax than was possible before."),o.a.createElement("p",null,"The following two syntaxes produce the same results:"),o.a.createElement("span",{className:"CodeExample-Title"},"Long Form"),o.a.createElement(D.a,{className:"lua"},"\n\tDef.Quad{\n\t\tOnCommand=function(self)\n\t\t\tself:zoomto(100,200)\n\t\t\tself:xy(_screen.cx, 100)\n\t\t\tself:diffuse(Color.Green)\n\t\t\tself:linear(1)\n\t\t\tself:y(_screen.h-100)\n\t\tend\n\t}\n"),o.a.createElement("span",{className:"CodeExample-Title"},"Condensed Via Command Chaining"),o.a.createElement(D.a,{className:"lua"},"\nDef.Quad{\n\tOnCommand=function(self)\n\t\tself:zoomto(100,200):xy(_screen.cx, 100):diffuse(Color.Green)\n\t\t\t:linear(1):y(_screen.h-100)\n\tend\n}\n"),o.a.createElement("p",null,"While commands ",o.a.createElement("em",null,"can")," be chained ad infinitum, an appropriate rule of thumb is to chain contextually-related commands together, and start a new line when a new context arises.  For example, consider starting with a tween command and then successively chaining the commands that are to be tweened."))}}]),t}(r.Component),Z=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"Handling Arbitrary Input"),o.a.createElement("p",null,"Arbitrary input (from game buttons, menu buttons, coin buttons, etc.) can be detected and handled by using the ",o.a.createElement("code",null,"AddInputCallback()")," method of any screen."),o.a.createElement("span",{className:"CodeExample-Title"},"A very simple InputCallback example:"),o.a.createElement(D.a,{className:"lua"},"\nlocal function InputHandler( event )\n\t-- do stuff with the event table in here\n\t-- the attributes of the event table are documented below\nend\n\nDef.ActorFrame{\n\tOnCommand=function(self)\n\t\tSCREENMAN:GetTopScreen():AddInputCallback( InputHandler )\n\tend,\n}\n"),o.a.createElement("p",null,"This adds the lua function ",o.a.createElement("code",null,"InputHandler()")," to the list of functions the screen will pass input to.  Whenever an input event occurs, ",o.a.createElement("code",null,"InputHandler()")," will be passed a table with the details of the event."),o.a.createElement("p",{className:"alert alert-warning"},"Note that this method should ",o.a.createElement("strong",null,"not")," be used to handle text input from the user because it would not handle localization or different keyboard layouts."),o.a.createElement("p",null,"The screen and your own callback function will both be passed input events, so be aware of what input the current screen responds to and consider the effects."),o.a.createElement("p",null,"Details of the table containing the event data is as follows.  In the very simple example above, this table would be the ",o.a.createElement("code",null,"event")," table that is passed into the ",o.a.createElement("code",null,"InputHandler()")," function on ",o.a.createElement("em",null,"every")," input event."),o.a.createElement("span",{className:"CodeExample-Title"},"An input event table:"),o.a.createElement(D.a,{className:"lua"},'\n{\n\t-- The semi-raw button that was pressed.\n\t-- This is what the button was mapped to by\n\t-- the keymap settings, but without the\n\t-- conversions that occur when\n\t-- OnlyDedicatedMenuButtons is true.\n\t-- Will be empty if the button was not mapped.\n\tbutton = string,\n\n\t-- The type of event.  One of three possible values:\n\t--\t\t"InputEventType_FirstPress"\n\t--\t\t"InputEventType_Repeat"\n\t--\t\t"InputEventType_Release".\n\ttype = string,\n\n\t-- The cooked button that was pressed.\n\t-- This is button with mapping that occurs when\n\t-- OnlyDedicatedMenuButtons is true applied.\n\t-- This is nil for unmapped buttons.\n\tGameButton = string,\n\n\t-- The player that the controller is mapped to, or nil.\n\t-- "PlayerNumber_P1" or "PlayerNumber_P2"\n\t-- or nil if the event wasn\'t mapped to either player.\n\tPlayerNumber = PlayerNumber,\n\n\t-- The game controller this event was mapped to.\n\t-- "GameController_1" or "GameController_2"\n\t-- or nil if the event wasn\'t mapped to either controller.\n\tcontroller = string,\n\n\t-- Unknown purpose.  Probably related to Netplay.\n\tMultiPlayer = string,\n\n\t-- The raw details of the event.\n\t-- Most of the time, this will be "lower level"\n\t-- than anything you might want themeside.\n\tDeviceInput = {\n\n\t\t-- The type of device.  The first half of the string will be "Device_",\n\t\t-- the second half will be from InputDeviceNames in RageInputDevice.cpp.\n\t\tdevice = string,\n\n\t\t-- The button that was pressed. the first half of the string will\n\t\t-- be "DeviceButton_", the second half will be from InitNames\n\t\t-- in RageInputDevice.cpp.\n\t\tbutton= string,\n\n\t\t-- A floating point value for analog input, (ie. mouse)\n\t\tlevel = float,\n\n\t\t-- Mousewheel input.\n\t\tz = float,\n\n\t\t-- Whether the button is down.\n\t\t-- This is level with a threshold and debouncing applied.\n\t\tdown = bool,\n\n\t\t-- How long ago this input occurred, in seconds.\n\t\tago = float,\n\n\t\t-- True if the device is a joystick.\n\t\tis_joystick = bool,\n\n\t\t-- True if the device is a mouse.\n\t\tis_mouse = bool\n\n\t},\n}\n'),o.a.createElement("p",null,"Here is a well-commented example, courtesy of Kyzentun.   It consists of a few variables, an input handling function, and an ActorFrame with two BitmapText actors whose text will be set by the input handling function."),o.a.createElement("p",null,"Note that this example only displays information from the ",o.a.createElement("em",null,"most recent")," button press because new input events (first_press, repeat, release) are triggered on a per-button basis.   It is possible to maintain a list of which buttons are being held in a Lua table, but this is left as an exercise for the reader for now. :)"),o.a.createElement("span",{className:"CodeExample-Title"},"A more practical Input Callback example:"),o.a.createElement(D.a,{className:"lua"},'\n-- button_text and game_button_text will be set to actors when those actors\n-- are created. These local variables exist to skip the hassle of calling\n-- GetChild().\nlocal button_text = false\nlocal game_button_text = false\n\n-- button_text will be used to show the button field from the input event,\n-- and game_button_text will be used for the GameButton field.\tThese two\n-- fields can be different because Stepmania has the OnlyDedicatedMenuButtons\n-- preference.\tThat preference is intended to make it so that only the menu\n-- buttons (MenuLeft, MenuRight, MenuUp, MenuDown, commonly only MenuLeft and\n-- MenuRight on cabinets) can be used in menus.\t If OnlyDedicatedMenuButtons\n-- is false, then Left will be translated to MenuLeft, and the GameButton\n-- field will be set to MenuLeft when Left on the pad is pressed.\n-- This digression about menu button translation really only matters to\n-- themers trying to make a good menu control scheme.\tFor a simfile played\n-- on a cabinet, GameButton will usually be nil, because most cabinets are\n-- set not to map the pads to the menu buttons.\n\n-- Since both text actors will have their text formatted the same way, it\'s\n-- useful to make a wrapper function to avoid duplicating the formatting.\n-- When the formatting changes, say changing spaces to colons, only\n-- set_button_text needs to change.\nlocal function set_button_text(text_actor, pn, button, press_type)\n\ttext_actor:settext( ToEnumShortString(pn) .. " " .. button .. " " .. press_type )\nend\n\n-- Lua.xml lists all the parts of the event table.\nlocal function InputHandler( event )\n\t-- If a button that is not mapped to any player is pressed, the\n\t-- PlayerNumber field will be nil.\tOtherwise, it will be PLAYER_1 or\n\t-- PLAYER_2.\n\tif not event.PlayerNumber then return end\n\t-- The delay between FirstPress and Repeat is set by the RepeatDelay\n\t-- metric for the screen.\n\t-- The number of repeats per second is set by the RepeatRate metric.\n\tlocal press_type= ToEnumShortString(event.type)\n\tset_button_text(button_text, event.PlayerNumber, event.button, press_type)\n\tset_button_text(game_button_text, event.PlayerNumber, event.GameButton, press_type)\nend\n\nreturn Def.ActorFrame{\n\t-- We add a sleeper actor so this can be used in a BGCHANGE lua\n\t-- file and the file won\'t be unloaded.\tThis isn\'t necessary when\n\t-- making a screen in a theme.\n\tDef.Actor{\n\t\tInitCommand=function(self)\n\t\t\tself:hibernate(1000)\n\t\tend\n\t},\n\n\n\t-- AddInputCallback cannot be in an InitCommand. InitCommands happen\n\t-- before the screen is the top screen, so calling GetTopScreen during an\n\t-- InitCommand would fetch the screen being transitioned out of that\n\t-- is about to be destroyed.\n\tOnCommand=function(self)\n\t\tSCREENMAN:GetTopScreen():AddInputCallback( InputHandler )\n\tend,\n\n\tDef.BitmapText{\n\t\tFont="Common Normal",\n\t\tInitCommand=function(self)\n\n\t\t\t-- Since button_text is set inside an InitCommand, it occurs before the\n\t\t\t-- OnCommand that adds the input callback, so the input callback\n\t\t\t-- doesn\'t need to worry about whether button_text is initialized.\n\t\t\tbutton_text = self\n\n\t\t\t-- Lua is whitespace insensitive, so sticking a line break before a\n\t\t\t-- colon in the middle of a chain of functions is valid.\n\t\t\tself:xy(_screen.cx, _screen.cy-12)\n\t\t\t\t-- Colors are just tables of four numbers. Using html\n\t\t\t\t-- strings and the color function would also work.\n\t\t\t\t:DiffuseAndStroke({.75, .75, 0, 1}, {0, 0, 0, 1})\n\t\tend\n\t},\n\n\tDef.BitmapText{\n\t\tFont="Common Normal",\n\t\tInitCommand= function(self)\n\t\t\tgame_button_text = self\n\t\t\tself:xy(_screen.cx, _screen.cy+12)\n\t\t\t\t:DiffuseAndStroke({.75, 0, .75, 1}, {0, 0, 0, 1})\n\t\tend\n\t},\n}\n'))}}]),t}(r.Component),$=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"Simple Tweens"),o.a.createElement("h3",{className:"subtitle"},"Animate things from one state to another"),o.a.createElement("p",null,"A ",o.a.createElement("em",null,"tween")," is a process in computer animation in which an object is manipulated (translated, transformed, altered, etc.) from a starting state to an ending state.  In the context of StepMania scripting, tweens are used to visually animate Actors."),o.a.createElement("p",null,"Using StepMania's Lua API, you can use tweens for many tasks, including (but not limited to):"),o.a.createElement("ul",null,o.a.createElement("li",null,"make a ",o.a.createElement(E.b,{to:"/Def.Sprite"},"Sprite Actor")," grow to be twice as large by tweening ",o.a.createElement("code",null,"zoom(2)")),o.a.createElement("li",null,"make the entire Screen Actor appear to \u201cfade out\u201d by tweening ",o.a.createElement("code",null,"diffuse(0,0,0,0)")),o.a.createElement("li",null,"gradually make a ",o.a.createElement(E.b,{to:"/Def.BitmapText"},"BitmapText Actor")," by tweening ",o.a.createElement("code",null,"diffusealpha(0)")),o.a.createElement("li",null,"move a ",o.a.createElement(E.b,{to:"/Def.Quad"},"Quad Actor")," diagonally 100 pixels down and 100 pixels right by tweening ",o.a.createElement("code",null,"xy(100,100)")),o.a.createElement("li",null,"etc.")),o.a.createElement("p",null,"This tutorial lists the types of simple tweens available through the ",o.a.createElement(E.b,{to:"/LuaAPI"},"Lua API"),", discusses how to use tweens, and concludes with a full example."),o.a.createElement("p",null,"To learn more about Actors and Lua scripting in StepMania, check out the ",o.a.createElement(E.b,{to:"/foreword"},"What Are Actors?")," tutorial.  To learn more about what Actor methods are available for tweening, refer to the ",o.a.createElement(E.b,{to:"/LuaAPI#Actors-Actor"},"Actor subsection")," of the Lua API."),o.a.createElement("h2",null,"Tweens Defined by the Engine"),o.a.createElement("p",null,"The StepMania engine defines four simple tweens directly: ",o.a.createElement("em",null,"linear"),", ",o.a.createElement("em",null,"accelerate"),", ",o.a.createElement("em",null,"decelerate"),", and ",o.a.createElement("em",null,"spring"),".  "),o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement("code",null,"linear()")," - Execute following commands steadily, at a constant rate."),o.a.createElement("li",null,o.a.createElement("code",null,"accelerate()")," - Starts slow and progressively speeds up."),o.a.createElement("li",null,o.a.createElement("code",null,"decelerate()")," - Starts fast and progressively slows down."),o.a.createElement("li",null,o.a.createElement("code",null,"spring()")," - Rapidly shoots beyond the desired end state, then springs back into place.")),o.a.createElement("p",null,"For completion's sake, it is worth noting here that ",o.a.createElement("code",null,"sleep()")," is also a tween, even though most Lua scripters working with StepMania don't think of it as such.  ",o.a.createElement("code",null,"sleep()")," will wait for the specified duration, then execute all following commands at once."),o.a.createElement("h2",null,"Tweens Defined by the ",o.a.createElement("em",null,"_fallback")," theme"),o.a.createElement("p",null,"The engine also defines a fifth tween type, ",o.a.createElement("em",null,"bezier"),", which allows scripters to custom define more complex tweens.  Indeed, the ",o.a.createElement("em",null,"_fallback")," theme uses the ",o.a.createElement("code",null,"bezier()")," tween type to predefine a few extra tweens for us that are simple to use."),o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement("code",null,"smooth()")," - Slow to start, fast in the middle, slow to finish."),o.a.createElement("li",null,o.a.createElement("code",null,"bouncebegin()")," - Briefly inverts the tween at first, giving the appearance of bouncing to start."),o.a.createElement("li",null,o.a.createElement("code",null,"bounceend()")," - Briefly inverts the tween at the end, giving the appearance of bouncing to end."),o.a.createElement("li",null,o.a.createElement("code",null,"drop()")," - Slows as it approaches its end state, then briefly accelerates the final few frames.")),o.a.createElement("p",null,"If you are interested in learning more about ",o.a.createElement("code",null,"bezier()")," tweens, you can inspect ",o.a.createElement("strong",null,o.a.createElement("a",{href:"https://github.com/stepmania/stepmania/blob/master/Themes/_fallback/Scripts/02%20Actor.lua"},"02 Actor.lua"))," in the _fallback theme's Scripts directory to see how ",o.a.createElement("em",null,"smooth"),", ",o.a.createElement("em",null,"bouncebegin"),", ",o.a.createElement("em",null,"bounceend"),", and ",o.a.createElement("em",null,"drop")," are defined in Lua."),o.a.createElement("h2",null,"How to Use Tweens"),o.a.createElement("p",null,"Knowing ",o.a.createElement("em",null,"what")," we can use is great, but it's only half the picture.  If you apply a tween to an Actor without any further commands, it won't ",o.a.createElement("em",null,"do")," anything.  Tweens need additional commands to execute over the course of their duration in order to animate in any meaningful way."),o.a.createElement("p",null,"Each of the tweens listed above takes a single argument: a ",o.a.createElement("em",null,"number")," representing a duration in seconds for long the StepMania engine should tween the methods that immediately follow for."),o.a.createElement("p",null,"Let's illustrate what we mean by this with some examples."),o.a.createElement("span",{className:"CodeExample-Title"},"Tween a quad to become twice as large:"),o.a.createElement(D.a,{className:"lua"},"\nDef.Quad{\n\tOnCommand=function(self)\n\t\t-- draw a Quad in center of the screen, make it 100x100 pixels,\n\t\t-- and make it red\n\t\tself:Center():zoomto(100,100):diffuse(1,0,0,1)\n\n\t\t-- over a duration of 3 seconds, have the\n\t\t-- quad zoom to be twice its initial size\n\t\tself:linear(3):zoom(2)\n\tend\n}\n"),o.a.createElement("p",null,"The next example is somewhat more fun in that it appears to spin the entire screen around, but it also illustrates a \u201cgotcha\u201d with tweening that you should be aware of."),o.a.createElement("span",{className:"CodeExample-Title"},"Rotate the entire Screen on the z-axis:"),o.a.createElement(D.a,{className:"lua"},"\nDef.ActorFrame{\n\tOnCommand=function(self)\n\t\t-- get the current Screen object using SCREENMAN\n\t\tlocal screen = SCREENMAN:GetTopScreen()\n\n\t\t-- over a duration of 2 seconds, have\n\t\t-- the entire screen rotate 360 degrees\n\t\t-- clockwise on the z-axis\n\t\tscreen:accelerate(2):rotationz(360)\n\n\t\t-- wait one second\n\t\tscreen:sleep(1)\n\n\t\t-- This should spin the screen around again, right?\n\t\t-- Not quite. The screen's z-rotation is already set\n\t\t-- to 360, so this will have no visible effect.\n\t\tscreen:accelerate(2):rotationz(360)\n\n\t\t-- This, however, will because it adds more rotation\n\t\t-- to the current state, rather than the initial state.\n\t\tscreen:accelerate(2):addrotationz(360)\n\tend\n}\n"),o.a.createElement("p",null,"Can you tween more than one property of an actor at once?  Absolutely."),o.a.createElement("p",null,"The next example demonstrates that it is possible to tween multiple methods with a single tween.  After calling a tween method, all methods following it will be tweened until the next tween method is encountered."),o.a.createElement("span",{className:"CodeExample-Title"},"Move a quad across the screen while fading it out:"),o.a.createElement(D.a,{className:"lua"},"\nDef.Quad{\n\tOnCommand=function(self)\n\t\t-- draw a Quad at the top-left of the screen, which is the\n\t\t-- default draw position if no x or y coordinates are specified,\n\t\t-- and make it 100x100 pixels\n\t\tself:zoomto(100,100)\n\n\t\t-- over a duration of 2 seconds, have the\n\t\t-- quad move to the bottom-right of the screen,\n\t\t-- and fade out by tweening the alpha channel to 0\n\t\t-- This comprises one full tween.\n\t\tself:decelerate(2):xy( _screen.w, _screen.h ):diffusealpha(0)\n\n\t\t-- Here is a second, unique tween that tweens three methods\n\t\t-- to change the color, xy-position, and y-rotation of the Quad.\n\t\t-- Note that line breaks are fine.\n\t\tself:accelerate(3)\n\t\t\t:diffuse(1,0,0,1)\n\t\t\t:xy( _screen.cx, _screen.cy )\n\t\t\t:addrotationy(1080)\n\n\tend\n}\n"),o.a.createElement("h2",null,"Tweens in Motion"),o.a.createElement("p",null,"Reading about tweens good, but a visual is worth a thousand words.  Here is a scripted simfile you can run in StepMania 5 that briefly demonstrates each of these tweens, one after another."),o.a.createElement("p",null,"You can download that here!  ",o.a.createElement("a",{href:"/Lua-For-SM5/downloads/Simple-Tweens.zip"},"Simple-Tweens.zip")))}}]),t}(r.Component),ee=function(e){function t(e){var a;return Object(c.a)(this,t),(a=Object(u.a)(this,Object(h.a)(t).call(this,e))).handleFilterChange=a.handleFilterChange.bind(Object(d.a)(a)),a.state={api_filter:""},a.old_pathname="",a}return Object(p.a)(t,e),Object(m.a)(t,[{key:"handleFilterChange",value:function(e){this.setState({api_filter:e})}},{key:"render",value:function(){var e=this;return o.a.createElement("div",{className:"h-100"},o.a.createElement(b,null),o.a.createElement("div",{className:"container-fluid h-100"},o.a.createElement("div",{className:"row h-100"},o.a.createElement("div",{className:"d-none col-xl-1 d-xl-block"}),o.a.createElement("div",{id:"content",className:"col-xl-7 col-lg-9 col-md-9 col-sm-12"},o.a.createElement(f.c,null,o.a.createElement(f.a,{exact:!0,path:"/",component:C}),o.a.createElement(f.a,{path:"/LuaAPI",render:function(t){return o.a.createElement(_,Object.assign({},t,e.state))}}),o.a.createElement(f.a,{path:"/resources",component:O}),o.a.createElement(f.a,{path:"/foreword",component:j}),o.a.createElement(f.a,{path:"/lua",component:I}),o.a.createElement(f.a,{path:"/Supported-File-Extensions",component:P}),o.a.createElement(f.a,{path:"/Mod-Chart-Setup",component:G}),o.a.createElement(f.a,{path:"/Def.Quad",component:R}),o.a.createElement(f.a,{path:"/Def.BitmapText",component:H}),o.a.createElement(f.a,{path:"/Def.Sprite",component:B}),o.a.createElement(f.a,{path:"/Def.Actor",component:W}),o.a.createElement(f.a,{path:"/LoadActor",component:U}),o.a.createElement(f.a,{path:"/Def.Sound",component:q}),o.a.createElement(f.a,{path:"/Def.ActorMultiVertex",component:z}),o.a.createElement(f.a,{path:"/Def.ActorFrameTexture",component:Q}),o.a.createElement(f.a,{path:"/Def.Model",component:V}),o.a.createElement(f.a,{path:"/SCREENMAN",component:Y}),o.a.createElement(f.a,{path:"/SOUND",component:J}),o.a.createElement(f.a,{path:"/Debugging",component:X}),o.a.createElement(f.a,{path:"/Command-Chaining",component:K}),o.a.createElement(f.a,{path:"/Arbitrary-Input",component:Z}),o.a.createElement(f.a,{path:"/Simple-Tweens",component:$})),o.a.createElement("p",null,"\xa0")),o.a.createElement("div",{className:"d-none col-xl-1 d-xl-block"}),o.a.createElement("div",{className:"col-xl-auto col-lg-2 col-md-3 col-sm-12"},o.a.createElement(S,{onFilterChange:this.handleFilterChange})))))}}]),t}(r.Component);i.a.render(o.a.createElement(E.a,{basename:"/Lua-For-SM5"},o.a.createElement(ee,null)),document.getElementById("root"))},28:function(e,t,a){e.exports=a(232)},35:function(e,t,a){},43:function(e,t,a){}},[[28,1,2]]]);
//# sourceMappingURL=main.2af6fe3f.chunk.js.map